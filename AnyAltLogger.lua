---@diagnostic disable: undefined-global
AnyAltLogger = {}
AnyAltLogger.name = "AnyAltLogger"
AnyAltLoggerSavedVariablesV2 = AnyAltLoggerSavedVariablesV2 or {}
local GetTimeStamp = GetTimeStamp
local GetGameTimeMilliseconds = GetGameTimeMilliseconds
local msBaseTime = (1000*GetTimeStamp())-GetGameTimeMilliseconds()
local playerName = ZO_CachedStrFormat("<<C:1>>",GetRawUnitName("player"))
local EventsForLogging = { [EVENT_SKYSHARDS_UPDATED] = "EVENT_SKYSHARDS_UPDATED", [EVENT_REASON_HARDWARE] = "EVENT_REASON_HARDWARE", [EVENT_REASON_SOFTWARE] = "EVENT_REASON_SOFTWARE", [EVENT_ABILITY_LIST_CHANGED] = "EVENT_ABILITY_LIST_CHANGED", [EVENT_ABILITY_PROGRESSION_RANK_UPDATE] = "EVENT_ABILITY_PROGRESSION_RANK_UPDATE", [EVENT_ABILITY_PROGRESSION_RESULT] = "EVENT_ABILITY_PROGRESSION_RESULT", [EVENT_ABILITY_PROGRESSION_XP_UPDATE] = "EVENT_ABILITY_PROGRESSION_XP_UPDATE", [EVENT_ABILITY_REQUIREMENTS_FAIL] = "EVENT_ABILITY_REQUIREMENTS_FAIL", [EVENT_ACCEPT_SHARED_QUEST_RESPONSE] = "EVENT_ACCEPT_SHARED_QUEST_RESPONSE", [EVENT_ACHIEVEMENTS_SEARCH_RESULTS_READY] = "EVENT_ACHIEVEMENTS_SEARCH_RESULTS_READY", [EVENT_ACHIEVEMENTS_UPDATED] = "EVENT_ACHIEVEMENTS_UPDATED", [EVENT_ACHIEVEMENT_AWARDED] = "EVENT_ACHIEVEMENT_AWARDED", [EVENT_ACHIEVEMENT_UPDATED] = "EVENT_ACHIEVEMENT_UPDATED", [EVENT_ACTION_BAR_IS_RESPECCABLE_BAR_STATE_CHANGED] = "EVENT_ACTION_BAR_IS_RESPECCABLE_BAR_STATE_CHANGED", [EVENT_ACTION_BAR_LOCKED_REASON_CHANGED] = "EVENT_ACTION_BAR_LOCKED_REASON_CHANGED", [EVENT_ACTION_SLOTS_ACTIVE_HOTBAR_UPDATED] = "EVENT_ACTION_SLOTS_ACTIVE_HOTBAR_UPDATED", [EVENT_ACTION_SLOTS_ALL_HOTBARS_UPDATED] = "EVENT_ACTION_SLOTS_ALL_HOTBARS_UPDATED", [EVENT_ACTION_SLOT_ABILITY_USED] = "EVENT_ACTION_SLOT_ABILITY_USED", [EVENT_ACTION_SLOT_ABILITY_USED_WRONG_WEAPON] = "EVENT_ACTION_SLOT_ABILITY_USED_WRONG_WEAPON", [EVENT_ACTION_SLOT_EFFECTS_CLEARED] = "EVENT_ACTION_SLOT_EFFECTS_CLEARED", [EVENT_ACTION_SLOT_EFFECT_UPDATE] = "EVENT_ACTION_SLOT_EFFECT_UPDATE", [EVENT_ACTION_SLOT_STATE_UPDATED] = "EVENT_ACTION_SLOT_STATE_UPDATED", [EVENT_ACTION_SLOT_UPDATED] = "EVENT_ACTION_SLOT_UPDATED", [EVENT_ACTION_UPDATE_COOLDOWNS] = "EVENT_ACTION_UPDATE_COOLDOWNS", [EVENT_ACTIVE_COMPANION_STATE_CHANGED] = "EVENT_ACTIVE_COMPANION_STATE_CHANGED", [EVENT_ACTIVE_DAEDRIC_ARTIFACT_CHANGED] = "EVENT_ACTIVE_DAEDRIC_ARTIFACT_CHANGED", [EVENT_ACTIVE_MOUNT_CHANGED] = "EVENT_ACTIVE_MOUNT_CHANGED", [EVENT_ACTIVE_QUEST_TOOL_CHANGED] = "EVENT_ACTIVE_QUEST_TOOL_CHANGED", [EVENT_ACTIVE_QUEST_TOOL_CLEARED] = "EVENT_ACTIVE_QUEST_TOOL_CLEARED", [EVENT_ACTIVE_QUICKSLOT_CHANGED] = "EVENT_ACTIVE_QUICKSLOT_CHANGED", [EVENT_ACTIVE_WEAPON_PAIR_CHANGED] = "EVENT_ACTIVE_WEAPON_PAIR_CHANGED", [EVENT_ACTIVITY_FINDER_ACTIVITY_COMPLETE] = "EVENT_ACTIVITY_FINDER_ACTIVITY_COMPLETE", [EVENT_ACTIVITY_FINDER_COOLDOWNS_UPDATE] = "EVENT_ACTIVITY_FINDER_COOLDOWNS_UPDATE", [EVENT_ACTIVITY_FINDER_STATUS_UPDATE] = "EVENT_ACTIVITY_FINDER_STATUS_UPDATE", [EVENT_ACTIVITY_QUEUE_RESULT] = "EVENT_ACTIVITY_QUEUE_RESULT", [EVENT_AGENT_CHAT_ACCEPTED] = "EVENT_AGENT_CHAT_ACCEPTED", [EVENT_AGENT_CHAT_DECLINED] = "EVENT_AGENT_CHAT_DECLINED", [EVENT_AGENT_CHAT_FORCED] = "EVENT_AGENT_CHAT_FORCED", [EVENT_AGENT_CHAT_REQUESTED] = "EVENT_AGENT_CHAT_REQUESTED", [EVENT_AGENT_CHAT_TERMINATED] = "EVENT_AGENT_CHAT_TERMINATED", [EVENT_ALLIANCE_POINT_UPDATE] = "EVENT_ALLIANCE_POINT_UPDATE", [EVENT_ANIMATION_NOTE] = "EVENT_ANIMATION_NOTE", [EVENT_ANTIQUITIES_UPDATED] = "EVENT_ANTIQUITIES_UPDATED", [EVENT_ANTIQUITY_DIGGING_ACTIVE_SKILL_USE_RESULT] = "EVENT_ANTIQUITY_DIGGING_ACTIVE_SKILL_USE_RESULT", [EVENT_ANTIQUITY_DIGGING_EXIT_RESPONSE] = "EVENT_ANTIQUITY_DIGGING_EXIT_RESPONSE", [EVENT_ANTIQUITY_DIGGING_MOUSE_OVER_ACTIVE_SKILL_CHANGED] = "EVENT_ANTIQUITY_DIGGING_MOUSE_OVER_ACTIVE_SKILL_CHANGED", [EVENT_ANTIQUITY_DIGGING_NUM_RADARS_REMAINING_CHANGED] = "EVENT_ANTIQUITY_DIGGING_NUM_RADARS_REMAINING_CHANGED", [EVENT_ANTIQUITY_DIG_SITES_UPDATED] = "EVENT_ANTIQUITY_DIG_SITES_UPDATED", [EVENT_ANTIQUITY_JOURNAL_SHOW_SCRYABLE] = "EVENT_ANTIQUITY_JOURNAL_SHOW_SCRYABLE", [EVENT_ANTIQUITY_LEAD_ACQUIRED] = "EVENT_ANTIQUITY_LEAD_ACQUIRED", [EVENT_ANTIQUITY_SEARCH_RESULTS_READY] = "EVENT_ANTIQUITY_SEARCH_RESULTS_READY", [EVENT_ANTIQUITY_SHOW_CODEX_ENTRY] = "EVENT_ANTIQUITY_SHOW_CODEX_ENTRY", [EVENT_ANTIQUITY_TRACKING_INITIALIZED] = "EVENT_ANTIQUITY_TRACKING_INITIALIZED", [EVENT_ANTIQUITY_TRACKING_UPDATE] = "EVENT_ANTIQUITY_TRACKING_UPDATE", [EVENT_ANTIQUITY_UPDATED] = "EVENT_ANTIQUITY_UPDATED", [EVENT_ARTIFACT_CONTROL_STATE] = "EVENT_ARTIFACT_CONTROL_STATE", [EVENT_ARTIFACT_SCROLL_STATE_CHANGED] = "EVENT_ARTIFACT_SCROLL_STATE_CHANGED", [EVENT_ARTIFICIAL_EFFECT_ADDED] = "EVENT_ARTIFICIAL_EFFECT_ADDED", [EVENT_ARTIFICIAL_EFFECT_REMOVED] = "EVENT_ARTIFICIAL_EFFECT_REMOVED", [EVENT_ASSIGNED_CAMPAIGN_CHANGED] = "EVENT_ASSIGNED_CAMPAIGN_CHANGED", [EVENT_ATTRIBUTE_UPGRADE_UPDATED] = "EVENT_ATTRIBUTE_UPGRADE_UPDATED", [EVENT_AUTO_MAP_NAVIGATION_TARGET_SET] = "EVENT_AUTO_MAP_NAVIGATION_TARGET_SET", [EVENT_AVENGE_KILL] = "EVENT_AVENGE_KILL", [EVENT_BANKED_CURRENCY_UPDATE] = "EVENT_BANKED_CURRENCY_UPDATE", [EVENT_BANKED_MONEY_UPDATE] = "EVENT_BANKED_MONEY_UPDATE", [EVENT_BANK_DEPOSIT_NOT_ALLOWED] = "EVENT_BANK_DEPOSIT_NOT_ALLOWED", [EVENT_BANK_IS_FULL] = "EVENT_BANK_IS_FULL", [EVENT_BATTLEGROUND_INACTIVITY_WARNING] = "EVENT_BATTLEGROUND_INACTIVITY_WARNING", [EVENT_BATTLEGROUND_KILL] = "EVENT_BATTLEGROUND_KILL", [EVENT_BATTLEGROUND_LEADERBOARD_DATA_CHANGED] = "EVENT_BATTLEGROUND_LEADERBOARD_DATA_CHANGED", [EVENT_BATTLEGROUND_RULESET_CHANGED] = "EVENT_BATTLEGROUND_RULESET_CHANGED", [EVENT_BATTLEGROUND_SCOREBOARD_UPDATED] = "EVENT_BATTLEGROUND_SCOREBOARD_UPDATED", [EVENT_BATTLEGROUND_SHUTDOWN_TIMER] = "EVENT_BATTLEGROUND_SHUTDOWN_TIMER", [EVENT_BATTLEGROUND_STATE_CHANGED] = "EVENT_BATTLEGROUND_STATE_CHANGED", [EVENT_BATTLE_STANDARDS_UPDATED] = "EVENT_BATTLE_STANDARDS_UPDATED", [EVENT_BEGIN_CUTSCENE] = "EVENT_BEGIN_CUTSCENE", [EVENT_BEGIN_LOCKPICK] = "EVENT_BEGIN_LOCKPICK", [EVENT_BEGIN_SIEGE_CONTROL] = "EVENT_BEGIN_SIEGE_CONTROL", [EVENT_BEGIN_SIEGE_UPGRADE] = "EVENT_BEGIN_SIEGE_UPGRADE", [EVENT_BOSSES_CHANGED] = "EVENT_BOSSES_CHANGED", [EVENT_BROADCAST] = "EVENT_BROADCAST", [EVENT_BUYBACK_RECEIPT] = "EVENT_BUYBACK_RECEIPT", [EVENT_BUY_RECEIPT] = "EVENT_BUY_RECEIPT", [EVENT_CADWELL_PROGRESSION_LEVEL_CHANGED] = "EVENT_CADWELL_PROGRESSION_LEVEL_CHANGED", [EVENT_CAMPAIGN_ALLIANCE_LOCK_ACTIVATED] = "EVENT_CAMPAIGN_ALLIANCE_LOCK_ACTIVATED", [EVENT_CAMPAIGN_ALLIANCE_LOCK_PENDING] = "EVENT_CAMPAIGN_ALLIANCE_LOCK_PENDING", [EVENT_CAMPAIGN_ASSIGNMENT_RESULT] = "EVENT_CAMPAIGN_ASSIGNMENT_RESULT", [EVENT_CAMPAIGN_EMPEROR_CHANGED] = "EVENT_CAMPAIGN_EMPEROR_CHANGED", [EVENT_CAMPAIGN_HISTORY_WINDOW_CHANGED] = "EVENT_CAMPAIGN_HISTORY_WINDOW_CHANGED", [EVENT_CAMPAIGN_LEADERBOARD_DATA_CHANGED] = "EVENT_CAMPAIGN_LEADERBOARD_DATA_CHANGED", [EVENT_CAMPAIGN_QUEUE_JOINED] = "EVENT_CAMPAIGN_QUEUE_JOINED", [EVENT_CAMPAIGN_QUEUE_LEFT] = "EVENT_CAMPAIGN_QUEUE_LEFT", [EVENT_CAMPAIGN_QUEUE_POSITION_CHANGED] = "EVENT_CAMPAIGN_QUEUE_POSITION_CHANGED", [EVENT_CAMPAIGN_QUEUE_STATE_CHANGED] = "EVENT_CAMPAIGN_QUEUE_STATE_CHANGED", [EVENT_CAMPAIGN_SCORE_DATA_CHANGED] = "EVENT_CAMPAIGN_SCORE_DATA_CHANGED", [EVENT_CAMPAIGN_SELECTION_DATA_CHANGED] = "EVENT_CAMPAIGN_SELECTION_DATA_CHANGED", [EVENT_CAMPAIGN_STATE_INITIALIZED] = "EVENT_CAMPAIGN_STATE_INITIALIZED", [EVENT_CAMPAIGN_UNASSIGNMENT_RESULT] = "EVENT_CAMPAIGN_UNASSIGNMENT_RESULT", [EVENT_CAMPAIGN_UNDERPOP_BONUS_CHANGE_NOTIFICATION] = "EVENT_CAMPAIGN_UNDERPOP_BONUS_CHANGE_NOTIFICATION", [EVENT_CANCEL_GROUND_TARGET_MODE] = "EVENT_CANCEL_GROUND_TARGET_MODE", [EVENT_CANCEL_MOUSE_REQUEST_DESTROY_ITEM] = "EVENT_CANCEL_MOUSE_REQUEST_DESTROY_ITEM", [EVENT_CANCEL_REQUEST_CONFIRM_USE_ITEM] = "EVENT_CANCEL_REQUEST_CONFIRM_USE_ITEM", [EVENT_CANNOT_CROUCH_WHILE_CARRYING_ARTIFACT] = "EVENT_CANNOT_CROUCH_WHILE_CARRYING_ARTIFACT", [EVENT_CANNOT_DO_THAT_WHILE_DEAD] = "EVENT_CANNOT_DO_THAT_WHILE_DEAD", [EVENT_CANNOT_DO_THAT_WHILE_HIDDEN] = "EVENT_CANNOT_DO_THAT_WHILE_HIDDEN", [EVENT_CAPTURE_AREA_SPAWNED] = "EVENT_CAPTURE_AREA_SPAWNED", [EVENT_CAPTURE_AREA_STATE_CHANGED] = "EVENT_CAPTURE_AREA_STATE_CHANGED", [EVENT_CAPTURE_AREA_STATUS] = "EVENT_CAPTURE_AREA_STATUS", [EVENT_CAPTURE_FLAG_STATE_CHANGED] = "EVENT_CAPTURE_FLAG_STATE_CHANGED", [EVENT_CARRIED_CURRENCY_UPDATE] = "EVENT_CARRIED_CURRENCY_UPDATE", [EVENT_CHAMPION_LEVEL_ACHIEVED] = "EVENT_CHAMPION_LEVEL_ACHIEVED", [EVENT_CHAMPION_POINT_GAINED] = "EVENT_CHAMPION_POINT_GAINED", [EVENT_CHAMPION_POINT_UPDATE] = "EVENT_CHAMPION_POINT_UPDATE", [EVENT_CHAMPION_PURCHASE_RESULT] = "EVENT_CHAMPION_PURCHASE_RESULT", [EVENT_CHAMPION_SYSTEM_UNLOCKED] = "EVENT_CHAMPION_SYSTEM_UNLOCKED", [EVENT_CHATTER_BEGIN] = "EVENT_CHATTER_BEGIN", [EVENT_CHATTER_END] = "EVENT_CHATTER_END", [EVENT_CHAT_CATEGORY_COLOR_CHANGED] = "EVENT_CHAT_CATEGORY_COLOR_CHANGED", [EVENT_CHAT_LOG_TOGGLED] = "EVENT_CHAT_LOG_TOGGLED", [EVENT_CHAT_MESSAGE_CHANNEL] = "EVENT_CHAT_MESSAGE_CHANNEL", [EVENT_CLAIM_REWARD_RESULT] = "EVENT_CLAIM_REWARD_RESULT", [EVENT_CLIENT_INTERACT_RESULT] = "EVENT_CLIENT_INTERACT_RESULT", [EVENT_CLOSE_BANK] = "EVENT_CLOSE_BANK", [EVENT_CLOSE_GUILD_BANK] = "EVENT_CLOSE_GUILD_BANK", [EVENT_CLOSE_STORE] = "EVENT_CLOSE_STORE", [EVENT_CLOSE_TRADING_HOUSE] = "EVENT_CLOSE_TRADING_HOUSE", [EVENT_COLLECTIBLES_SEARCH_RESULTS_READY] = "EVENT_COLLECTIBLES_SEARCH_RESULTS_READY", [EVENT_COLLECTIBLE_BLACKLIST_UPDATED] = "EVENT_COLLECTIBLE_BLACKLIST_UPDATED", [EVENT_COLLECTIBLE_CATEGORY_NEW_STATUS_CLEARED] = "EVENT_COLLECTIBLE_CATEGORY_NEW_STATUS_CLEARED", [EVENT_COLLECTIBLE_DYE_DATA_UPDATED] = "EVENT_COLLECTIBLE_DYE_DATA_UPDATED", [EVENT_COLLECTIBLE_NEW_STATUS_CLEARED] = "EVENT_COLLECTIBLE_NEW_STATUS_CLEARED", [EVENT_COLLECTIBLE_NOTIFICATION_NEW] = "EVENT_COLLECTIBLE_NOTIFICATION_NEW", [EVENT_COLLECTIBLE_NOTIFICATION_REMOVED] = "EVENT_COLLECTIBLE_NOTIFICATION_REMOVED", [EVENT_COLLECTIBLE_RENAME_ERROR] = "EVENT_COLLECTIBLE_RENAME_ERROR", [EVENT_COLLECTIBLE_REQUEST_BROWSE_TO] = "EVENT_COLLECTIBLE_REQUEST_BROWSE_TO", [EVENT_COLLECTIBLE_SET_IN_WATER_ALERT] = "EVENT_COLLECTIBLE_SET_IN_WATER_ALERT", [EVENT_COLLECTIBLE_USE_RESULT] = "EVENT_COLLECTIBLE_USE_RESULT", [EVENT_COLLECTION_UPDATED] = "EVENT_COLLECTION_UPDATED", [EVENT_COMBAT_EVENT] = "EVENT_COMBAT_EVENT", [EVENT_COMPANION_ACTIVATED] = "EVENT_COMPANION_ACTIVATED", [EVENT_COMPANION_DEACTIVATED] = "EVENT_COMPANION_DEACTIVATED", [EVENT_COMPANION_EXPERIENCE_GAIN] = "EVENT_COMPANION_EXPERIENCE_GAIN", [EVENT_COMPANION_RAPPORT_UPDATE] = "EVENT_COMPANION_RAPPORT_UPDATE", [EVENT_COMPANION_SKILLS_FULL_UPDATE] = "EVENT_COMPANION_SKILLS_FULL_UPDATE", [EVENT_COMPANION_SKILL_LINE_ADDED] = "EVENT_COMPANION_SKILL_LINE_ADDED", [EVENT_COMPANION_SKILL_RANK_UPDATE] = "EVENT_COMPANION_SKILL_RANK_UPDATE", [EVENT_COMPANION_SKILL_XP_UPDATE] = "EVENT_COMPANION_SKILL_XP_UPDATE", [EVENT_COMPANION_SUMMON_RESULT] = "EVENT_COMPANION_SUMMON_RESULT", [EVENT_COMPANION_ULTIMATE_FAILURE] = "EVENT_COMPANION_ULTIMATE_FAILURE", [EVENT_CONFIRM_INTERACT] = "EVENT_CONFIRM_INTERACT", [EVENT_CONVERSATION_FAILED_INVENTORY_FULL] = "EVENT_CONVERSATION_FAILED_INVENTORY_FULL", [EVENT_CONVERSATION_FAILED_UNIQUE_ITEM] = "EVENT_CONVERSATION_FAILED_UNIQUE_ITEM", [EVENT_CONVERSATION_UPDATED] = "EVENT_CONVERSATION_UPDATED", [EVENT_CORONATE_EMPEROR_NOTIFICATION] = "EVENT_CORONATE_EMPEROR_NOTIFICATION", [EVENT_CRAFTING_STATION_INTERACT] = "EVENT_CRAFTING_STATION_INTERACT", [EVENT_CRAFT_BAG_AUTO_TRANSFER_NOTIFICATION_CLEARED] = "EVENT_CRAFT_BAG_AUTO_TRANSFER_NOTIFICATION_CLEARED", [EVENT_CRAFT_COMPLETED] = "EVENT_CRAFT_COMPLETED", [EVENT_CRAFT_FAILED] = "EVENT_CRAFT_FAILED", [EVENT_CRAFT_STARTED] = "EVENT_CRAFT_STARTED", [EVENT_CROWN_CRATES_SYSTEM_STATE_CHANGED] = "EVENT_CROWN_CRATES_SYSTEM_STATE_CHANGED", [EVENT_CROWN_CRATE_INVENTORY_UPDATED] = "EVENT_CROWN_CRATE_INVENTORY_UPDATED", [EVENT_CROWN_CRATE_OPEN_RESPONSE] = "EVENT_CROWN_CRATE_OPEN_RESPONSE", [EVENT_CROWN_CRATE_QUANTITY_UPDATE] = "EVENT_CROWN_CRATE_QUANTITY_UPDATE", [EVENT_CURRENCY_CAPS_CHANGED] = "EVENT_CURRENCY_CAPS_CHANGED", [EVENT_CURRENT_CAMPAIGN_CHANGED] = "EVENT_CURRENT_CAMPAIGN_CHANGED", [EVENT_CURRENT_SUBZONE_LIST_CHANGED] = "EVENT_CURRENT_SUBZONE_LIST_CHANGED", [EVENT_CURSOR_DROPPED] = "EVENT_CURSOR_DROPPED", [EVENT_CURSOR_PICKUP] = "EVENT_CURSOR_PICKUP", [EVENT_CUSTOMER_SERVICE_FEEDBACK_SUBMITTED] = "EVENT_CUSTOMER_SERVICE_FEEDBACK_SUBMITTED", [EVENT_CUSTOMER_SERVICE_TICKET_SUBMITTED] = "EVENT_CUSTOMER_SERVICE_TICKET_SUBMITTED", [EVENT_DAEDRIC_ARTIFACT_OBJECTIVE_SPAWNED_BUT_NOT_REVEALED] = "EVENT_DAEDRIC_ARTIFACT_OBJECTIVE_SPAWNED_BUT_NOT_REVEALED", [EVENT_DAEDRIC_ARTIFACT_OBJECTIVE_STATE_CHANGED] = "EVENT_DAEDRIC_ARTIFACT_OBJECTIVE_STATE_CHANGED", [EVENT_DAILY_LOGIN_MONTH_CHANGED] = "EVENT_DAILY_LOGIN_MONTH_CHANGED", [EVENT_DEPOSE_EMPEROR_NOTIFICATION] = "EVENT_DEPOSE_EMPEROR_NOTIFICATION", [EVENT_DISABLE_SIEGE_AIM_ABILITY] = "EVENT_DISABLE_SIEGE_AIM_ABILITY", [EVENT_DISABLE_SIEGE_FIRE_ABILITY] = "EVENT_DISABLE_SIEGE_FIRE_ABILITY", [EVENT_DISABLE_SIEGE_PACKUP_ABILITY] = "EVENT_DISABLE_SIEGE_PACKUP_ABILITY", [EVENT_DISCOVERY_EXPERIENCE] = "EVENT_DISCOVERY_EXPERIENCE", [EVENT_DISGUISE_STATE_CHANGED] = "EVENT_DISGUISE_STATE_CHANGED", [EVENT_DISPLAY_ACTIVE_COMBAT_TIP] = "EVENT_DISPLAY_ACTIVE_COMBAT_TIP", [EVENT_DISPLAY_ALERT] = "EVENT_DISPLAY_ALERT", [EVENT_DISPLAY_ANNOUNCEMENT] = "EVENT_DISPLAY_ANNOUNCEMENT", [EVENT_DISPLAY_TUTORIAL] = "EVENT_DISPLAY_TUTORIAL", [EVENT_DISPOSITION_UPDATE] = "EVENT_DISPOSITION_UPDATE", [EVENT_DUEL_COUNTDOWN] = "EVENT_DUEL_COUNTDOWN", [EVENT_DUEL_FINISHED] = "EVENT_DUEL_FINISHED", [EVENT_DUEL_INVITE_ACCEPTED] = "EVENT_DUEL_INVITE_ACCEPTED", [EVENT_DUEL_INVITE_CANCELED] = "EVENT_DUEL_INVITE_CANCELED", [EVENT_DUEL_INVITE_DECLINED] = "EVENT_DUEL_INVITE_DECLINED", [EVENT_DUEL_INVITE_FAILED] = "EVENT_DUEL_INVITE_FAILED", [EVENT_DUEL_INVITE_RECEIVED] = "EVENT_DUEL_INVITE_RECEIVED", [EVENT_DUEL_INVITE_REMOVED] = "EVENT_DUEL_INVITE_REMOVED", [EVENT_DUEL_INVITE_SENT] = "EVENT_DUEL_INVITE_SENT", [EVENT_DUEL_NEAR_BOUNDARY] = "EVENT_DUEL_NEAR_BOUNDARY", [EVENT_DUEL_STARTED] = "EVENT_DUEL_STARTED", [EVENT_DYEING_STATION_INTERACT_END] = "EVENT_DYEING_STATION_INTERACT_END", [EVENT_DYEING_STATION_INTERACT_START] = "EVENT_DYEING_STATION_INTERACT_START", [EVENT_DYES_SEARCH_RESULTS_READY] = "EVENT_DYES_SEARCH_RESULTS_READY", [EVENT_DYE_STAMP_USE_FAIL] = "EVENT_DYE_STAMP_USE_FAIL", [EVENT_EFFECTS_FULL_UPDATE] = "EVENT_EFFECTS_FULL_UPDATE", [EVENT_EFFECT_CHANGED] = "EVENT_EFFECT_CHANGED", [EVENT_ENABLE_SIEGE_AIM_ABILITY] = "EVENT_ENABLE_SIEGE_AIM_ABILITY", [EVENT_ENABLE_SIEGE_FIRE_ABILITY] = "EVENT_ENABLE_SIEGE_FIRE_ABILITY", [EVENT_ENABLE_SIEGE_PACKUP_ABILITY] = "EVENT_ENABLE_SIEGE_PACKUP_ABILITY", [EVENT_END_CRAFTING_STATION_INTERACT] = "EVENT_END_CRAFTING_STATION_INTERACT", [EVENT_END_CUTSCENE] = "EVENT_END_CUTSCENE", [EVENT_END_FAST_TRAVEL_INTERACTION] = "EVENT_END_FAST_TRAVEL_INTERACTION", [EVENT_END_FAST_TRAVEL_KEEP_INTERACTION] = "EVENT_END_FAST_TRAVEL_KEEP_INTERACTION", [EVENT_END_KEEP_GUILD_CLAIM_INTERACTION] = "EVENT_END_KEEP_GUILD_CLAIM_INTERACTION", [EVENT_END_KEEP_GUILD_RELEASE_INTERACTION] = "EVENT_END_KEEP_GUILD_RELEASE_INTERACTION", [EVENT_END_SIEGE_CONTROL] = "EVENT_END_SIEGE_CONTROL", [EVENT_END_SOUL_GEM_RESURRECTION] = "EVENT_END_SOUL_GEM_RESURRECTION", [EVENT_ENLIGHTENED_STATE_GAINED] = "EVENT_ENLIGHTENED_STATE_GAINED", [EVENT_ENLIGHTENED_STATE_LOST] = "EVENT_ENLIGHTENED_STATE_LOST", [EVENT_ENTER_GROUND_TARGET_MODE] = "EVENT_ENTER_GROUND_TARGET_MODE", [EVENT_ESO_PLUS_FREE_TRIAL_NOTIFICATION_CLEARED] = "EVENT_ESO_PLUS_FREE_TRIAL_NOTIFICATION_CLEARED", [EVENT_EXPERIENCE_GAIN] = "EVENT_EXPERIENCE_GAIN", [EVENT_EXPERIENCE_UPDATE] = "EVENT_EXPERIENCE_UPDATE", [EVENT_FAST_TRAVEL_KEEP_NETWORK_LINK_CHANGED] = "EVENT_FAST_TRAVEL_KEEP_NETWORK_LINK_CHANGED", [EVENT_FAST_TRAVEL_KEEP_NETWORK_UPDATED] = "EVENT_FAST_TRAVEL_KEEP_NETWORK_UPDATED", [EVENT_FAST_TRAVEL_NETWORK_UPDATED] = "EVENT_FAST_TRAVEL_NETWORK_UPDATED", [EVENT_FEEDBACK_REQUESTED] = "EVENT_FEEDBACK_REQUESTED", [EVENT_FEEDBACK_TOO_FREQUENT_SCREENSHOT] = "EVENT_FEEDBACK_TOO_FREQUENT_SCREENSHOT", [EVENT_FINESSE_RANK_CHANGED] = "EVENT_FINESSE_RANK_CHANGED", [EVENT_FISHING_LURE_CLEARED] = "EVENT_FISHING_LURE_CLEARED", [EVENT_FISHING_LURE_SET] = "EVENT_FISHING_LURE_SET", [EVENT_FORCE_RESPEC] = "EVENT_FORCE_RESPEC", [EVENT_FORWARD_CAMPS_UPDATED] = "EVENT_FORWARD_CAMPS_UPDATED", [EVENT_FORWARD_CAMP_RESPAWN_TIMER_BEGINS] = "EVENT_FORWARD_CAMP_RESPAWN_TIMER_BEGINS", [EVENT_GAME_CAMERA_ACTIVATED] = "EVENT_GAME_CAMERA_ACTIVATED", [EVENT_GAME_CAMERA_CHARACTER_FRAMING_STARTED] = "EVENT_GAME_CAMERA_CHARACTER_FRAMING_STARTED", [EVENT_GAME_CAMERA_DEACTIVATED] = "EVENT_GAME_CAMERA_DEACTIVATED", [EVENT_GAME_CAMERA_UI_MODE_CHANGED] = "EVENT_GAME_CAMERA_UI_MODE_CHANGED", [EVENT_GAME_FOCUS_CHANGED] = "EVENT_GAME_FOCUS_CHANGED", [EVENT_GIFTING_GRACE_PERIOD_STARTED] = "EVENT_GIFTING_GRACE_PERIOD_STARTED", [EVENT_GIFTING_GRACE_PERIOD_STARTED_NOTIFICATION_CLEARED] = "EVENT_GIFTING_GRACE_PERIOD_STARTED_NOTIFICATION_CLEARED", [EVENT_GIFTING_UNLOCKED_NOTIFICATION_CLEARED] = "EVENT_GIFTING_UNLOCKED_NOTIFICATION_CLEARED", [EVENT_GIFTING_UNLOCKED_STATUS_CHANGED] = "EVENT_GIFTING_UNLOCKED_STATUS_CHANGED", [EVENT_GIFTS_UPDATED] = "EVENT_GIFTS_UPDATED", [EVENT_GRAVEYARD_USAGE_FAILURE] = "EVENT_GRAVEYARD_USAGE_FAILURE", [EVENT_GROUPING_TOOLS_FIND_REPLACEMENT_NOTIFICATION_NEW] = "EVENT_GROUPING_TOOLS_FIND_REPLACEMENT_NOTIFICATION_NEW", [EVENT_GROUPING_TOOLS_FIND_REPLACEMENT_NOTIFICATION_REMOVED] = "EVENT_GROUPING_TOOLS_FIND_REPLACEMENT_NOTIFICATION_REMOVED", [EVENT_GROUPING_TOOLS_LFG_JOINED] = "EVENT_GROUPING_TOOLS_LFG_JOINED", [EVENT_GROUPING_TOOLS_NO_LONGER_LFG] = "EVENT_GROUPING_TOOLS_NO_LONGER_LFG", [EVENT_GROUPING_TOOLS_READY_CHECK_CANCELLED] = "EVENT_GROUPING_TOOLS_READY_CHECK_CANCELLED", [EVENT_GROUPING_TOOLS_READY_CHECK_UPDATED] = "EVENT_GROUPING_TOOLS_READY_CHECK_UPDATED", [EVENT_GROUP_CAMPAIGN_ASSIGNMENTS_CHANGED] = "EVENT_GROUP_CAMPAIGN_ASSIGNMENTS_CHANGED", [EVENT_GROUP_ELECTION_FAILED] = "EVENT_GROUP_ELECTION_FAILED", [EVENT_GROUP_ELECTION_NOTIFICATION_ADDED] = "EVENT_GROUP_ELECTION_NOTIFICATION_ADDED", [EVENT_GROUP_ELECTION_NOTIFICATION_REMOVED] = "EVENT_GROUP_ELECTION_NOTIFICATION_REMOVED", [EVENT_GROUP_ELECTION_REQUESTED] = "EVENT_GROUP_ELECTION_REQUESTED", [EVENT_GROUP_ELECTION_RESULT] = "EVENT_GROUP_ELECTION_RESULT", [EVENT_GROUP_INVITE_ACCEPT_RESPONSE_TIMEOUT] = "EVENT_GROUP_INVITE_ACCEPT_RESPONSE_TIMEOUT", [EVENT_GROUP_INVITE_RECEIVED] = "EVENT_GROUP_INVITE_RECEIVED", [EVENT_GROUP_INVITE_REMOVED] = "EVENT_GROUP_INVITE_REMOVED", [EVENT_GROUP_INVITE_RESPONSE] = "EVENT_GROUP_INVITE_RESPONSE", [EVENT_GROUP_MEMBER_CONNECTED_STATUS] = "EVENT_GROUP_MEMBER_CONNECTED_STATUS", [EVENT_GROUP_MEMBER_IN_REMOTE_REGION] = "EVENT_GROUP_MEMBER_IN_REMOTE_REGION", [EVENT_GROUP_MEMBER_JOINED] = "EVENT_GROUP_MEMBER_JOINED", [EVENT_GROUP_MEMBER_LEFT] = "EVENT_GROUP_MEMBER_LEFT", [EVENT_GROUP_MEMBER_ROLE_CHANGED] = "EVENT_GROUP_MEMBER_ROLE_CHANGED", [EVENT_GROUP_MEMBER_SUBZONE_CHANGED] = "EVENT_GROUP_MEMBER_SUBZONE_CHANGED", [EVENT_GROUP_NOTIFICATION_MESSAGE] = "EVENT_GROUP_NOTIFICATION_MESSAGE", [EVENT_GROUP_OPERATION_RESULT] = "EVENT_GROUP_OPERATION_RESULT", [EVENT_GROUP_SUPPORT_RANGE_UPDATE] = "EVENT_GROUP_SUPPORT_RANGE_UPDATE", [EVENT_GROUP_TYPE_CHANGED] = "EVENT_GROUP_TYPE_CHANGED", [EVENT_GROUP_UPDATE] = "EVENT_GROUP_UPDATE", [EVENT_GROUP_VETERAN_DIFFICULTY_CHANGED] = "EVENT_GROUP_VETERAN_DIFFICULTY_CHANGED", [EVENT_GUILD_BANKED_MONEY_UPDATE] = "EVENT_GUILD_BANKED_MONEY_UPDATE", [EVENT_GUILD_BANK_DESELECTED] = "EVENT_GUILD_BANK_DESELECTED", [EVENT_GUILD_BANK_ITEMS_READY] = "EVENT_GUILD_BANK_ITEMS_READY", [EVENT_GUILD_BANK_ITEM_ADDED] = "EVENT_GUILD_BANK_ITEM_ADDED", [EVENT_GUILD_BANK_ITEM_REMOVED] = "EVENT_GUILD_BANK_ITEM_REMOVED", [EVENT_GUILD_BANK_OPEN_ERROR] = "EVENT_GUILD_BANK_OPEN_ERROR", [EVENT_GUILD_BANK_SELECTED] = "EVENT_GUILD_BANK_SELECTED", [EVENT_GUILD_BANK_TRANSFER_ERROR] = "EVENT_GUILD_BANK_TRANSFER_ERROR", [EVENT_GUILD_BANK_UPDATED_QUANTITY] = "EVENT_GUILD_BANK_UPDATED_QUANTITY", [EVENT_GUILD_FINDER_APPLICATION_RESPONSE] = "EVENT_GUILD_FINDER_APPLICATION_RESPONSE", [EVENT_GUILD_FINDER_APPLICATION_RESULTS_GUILD] = "EVENT_GUILD_FINDER_APPLICATION_RESULTS_GUILD", [EVENT_GUILD_FINDER_APPLICATION_RESULTS_PLAYER] = "EVENT_GUILD_FINDER_APPLICATION_RESULTS_PLAYER", [EVENT_GUILD_FINDER_BLACKLIST_RESPONSE] = "EVENT_GUILD_FINDER_BLACKLIST_RESPONSE", [EVENT_GUILD_FINDER_BLACKLIST_RESULTS] = "EVENT_GUILD_FINDER_BLACKLIST_RESULTS", [EVENT_GUILD_FINDER_GUILD_APPLICATIONS_VIEWED] = "EVENT_GUILD_FINDER_GUILD_APPLICATIONS_VIEWED", [EVENT_GUILD_FINDER_GUILD_NEW_APPLICATIONS] = "EVENT_GUILD_FINDER_GUILD_NEW_APPLICATIONS", [EVENT_GUILD_FINDER_LONG_SEARCH_WARNING] = "EVENT_GUILD_FINDER_LONG_SEARCH_WARNING", [EVENT_GUILD_FINDER_PLAYER_APPLICATIONS_CHANGED] = "EVENT_GUILD_FINDER_PLAYER_APPLICATIONS_CHANGED", [EVENT_GUILD_FINDER_PROCESS_APPLICATION_RESPONSE] = "EVENT_GUILD_FINDER_PROCESS_APPLICATION_RESPONSE", [EVENT_GUILD_FINDER_SEARCH_COMPLETE] = "EVENT_GUILD_FINDER_SEARCH_COMPLETE", [EVENT_GUILD_FINDER_SEARCH_COOLDOWN_UPDATE] = "EVENT_GUILD_FINDER_SEARCH_COOLDOWN_UPDATE", [EVENT_GUILD_ID_CHANGED] = "EVENT_GUILD_ID_CHANGED", [EVENT_GUILD_INFO_REQUEST_COMPLETE] = "EVENT_GUILD_INFO_REQUEST_COMPLETE", [EVENT_GUILD_KIOSK_ACTIVE_BIDS_RESPONSE] = "EVENT_GUILD_KIOSK_ACTIVE_BIDS_RESPONSE", [EVENT_GUILD_KIOSK_CONSIDER_BID_START] = "EVENT_GUILD_KIOSK_CONSIDER_BID_START", [EVENT_GUILD_KIOSK_CONSIDER_BID_STOP] = "EVENT_GUILD_KIOSK_CONSIDER_BID_STOP", [EVENT_GUILD_KIOSK_CONSIDER_PURCHASE_START] = "EVENT_GUILD_KIOSK_CONSIDER_PURCHASE_START", [EVENT_GUILD_KIOSK_CONSIDER_PURCHASE_STOP] = "EVENT_GUILD_KIOSK_CONSIDER_PURCHASE_STOP", [EVENT_GUILD_KIOSK_ERROR] = "EVENT_GUILD_KIOSK_ERROR", [EVENT_GUILD_KIOSK_RESULT] = "EVENT_GUILD_KIOSK_RESULT", [EVENT_GUILD_RECRUITMENT_INFO_UPDATED] = "EVENT_GUILD_RECRUITMENT_INFO_UPDATED", [EVENT_GUI_WORLD_PARTICLE_EFFECT_READY] = "EVENT_GUI_WORLD_PARTICLE_EFFECT_READY", [EVENT_HELP_INITIALIZED] = "EVENT_HELP_INITIALIZED", [EVENT_HELP_SEARCH_RESULTS_READY] = "EVENT_HELP_SEARCH_RESULTS_READY", [EVENT_HERALDRY_CUSTOMIZATION_END] = "EVENT_HERALDRY_CUSTOMIZATION_END", [EVENT_HERALDRY_CUSTOMIZATION_START] = "EVENT_HERALDRY_CUSTOMIZATION_START", [EVENT_HERALDRY_FUNDS_UPDATED] = "EVENT_HERALDRY_FUNDS_UPDATED", [EVENT_HERALDRY_SAVED] = "EVENT_HERALDRY_SAVED", [EVENT_HIDE_BOOK] = "EVENT_HIDE_BOOK", [EVENT_HIDE_OBJECTIVE_STATUS] = "EVENT_HIDE_OBJECTIVE_STATUS", [EVENT_HIGH_FALL_DAMAGE] = "EVENT_HIGH_FALL_DAMAGE", [EVENT_HOME_SHOW_LEADERBOARD_DATA_CHANGED] = "EVENT_HOME_SHOW_LEADERBOARD_DATA_CHANGED", [EVENT_HOTBAR_SLOT_CHANGE_REQUESTED] = "EVENT_HOTBAR_SLOT_CHANGE_REQUESTED", [EVENT_HOTBAR_SLOT_STATE_UPDATED] = "EVENT_HOTBAR_SLOT_STATE_UPDATED", [EVENT_HOTBAR_SLOT_UPDATED] = "EVENT_HOTBAR_SLOT_UPDATED", [EVENT_HOT_BAR_RESULT] = "EVENT_HOT_BAR_RESULT", [EVENT_HOUSING_ADD_PERMISSIONS_CANT_ADD_SELF] = "EVENT_HOUSING_ADD_PERMISSIONS_CANT_ADD_SELF", [EVENT_HOUSING_ADD_PERMISSIONS_FAILED] = "EVENT_HOUSING_ADD_PERMISSIONS_FAILED", [EVENT_HOUSING_EDITOR_COMMAND_RESULT] = "EVENT_HOUSING_EDITOR_COMMAND_RESULT", [EVENT_HOUSING_EDITOR_LINK_TARGET_CHANGED] = "EVENT_HOUSING_EDITOR_LINK_TARGET_CHANGED", [EVENT_HOUSING_EDITOR_MODE_CHANGED] = "EVENT_HOUSING_EDITOR_MODE_CHANGED", [EVENT_HOUSING_EDITOR_REQUEST_RESULT] = "EVENT_HOUSING_EDITOR_REQUEST_RESULT", [EVENT_HOUSING_FURNITURE_MOVED] = "EVENT_HOUSING_FURNITURE_MOVED", [EVENT_HOUSING_FURNITURE_PATH_DATA_CHANGED] = "EVENT_HOUSING_FURNITURE_PATH_DATA_CHANGED", [EVENT_HOUSING_FURNITURE_PATH_NODES_RESTORED] = "EVENT_HOUSING_FURNITURE_PATH_NODES_RESTORED", [EVENT_HOUSING_FURNITURE_PATH_NODE_ADDED] = "EVENT_HOUSING_FURNITURE_PATH_NODE_ADDED", [EVENT_HOUSING_FURNITURE_PATH_NODE_MOVED] = "EVENT_HOUSING_FURNITURE_PATH_NODE_MOVED", [EVENT_HOUSING_FURNITURE_PATH_NODE_REMOVED] = "EVENT_HOUSING_FURNITURE_PATH_NODE_REMOVED", [EVENT_HOUSING_FURNITURE_PATH_STARTING_NODE_INDEX_CHANGED] = "EVENT_HOUSING_FURNITURE_PATH_STARTING_NODE_INDEX_CHANGED", [EVENT_HOUSING_FURNITURE_PLACED] = "EVENT_HOUSING_FURNITURE_PLACED", [EVENT_HOUSING_FURNITURE_REMOVED] = "EVENT_HOUSING_FURNITURE_REMOVED", [EVENT_HOUSING_LOAD_PERMISSIONS_RESULT] = "EVENT_HOUSING_LOAD_PERMISSIONS_RESULT", [EVENT_HOUSING_PATH_NODE_SELECTION_CHANGED] = "EVENT_HOUSING_PATH_NODE_SELECTION_CHANGED", [EVENT_HOUSING_PERMISSIONS_CHANGED] = "EVENT_HOUSING_PERMISSIONS_CHANGED", [EVENT_HOUSING_PLAYER_INFO_CHANGED] = "EVENT_HOUSING_PLAYER_INFO_CHANGED", [EVENT_HOUSING_POPULATION_CHANGED] = "EVENT_HOUSING_POPULATION_CHANGED", [EVENT_HOUSING_PRIMARY_RESIDENCE_SET] = "EVENT_HOUSING_PRIMARY_RESIDENCE_SET", [EVENT_HOUSING_TARGET_FURNITURE_CHANGED] = "EVENT_HOUSING_TARGET_FURNITURE_CHANGED", [EVENT_IMPACTFUL_HIT] = "EVENT_IMPACTFUL_HIT", [EVENT_INSTANCE_KICK_TIME_UPDATE] = "EVENT_INSTANCE_KICK_TIME_UPDATE", [EVENT_INTERACTION_ENDED] = "EVENT_INTERACTION_ENDED", [EVENT_INTERACT_BUSY] = "EVENT_INTERACT_BUSY", [EVENT_INVENTORY_BAG_CAPACITY_CHANGED] = "EVENT_INVENTORY_BAG_CAPACITY_CHANGED", [EVENT_INVENTORY_BANK_CAPACITY_CHANGED] = "EVENT_INVENTORY_BANK_CAPACITY_CHANGED", [EVENT_INVENTORY_BOUGHT_BAG_SPACE] = "EVENT_INVENTORY_BOUGHT_BAG_SPACE", [EVENT_INVENTORY_BOUGHT_BANK_SPACE] = "EVENT_INVENTORY_BOUGHT_BANK_SPACE", [EVENT_INVENTORY_BUY_BAG_SPACE] = "EVENT_INVENTORY_BUY_BAG_SPACE", [EVENT_INVENTORY_BUY_BANK_SPACE] = "EVENT_INVENTORY_BUY_BANK_SPACE", [EVENT_INVENTORY_CLOSE_BUY_SPACE] = "EVENT_INVENTORY_CLOSE_BUY_SPACE", [EVENT_INVENTORY_EQUIP_MYTHIC_FAILED] = "EVENT_INVENTORY_EQUIP_MYTHIC_FAILED", [EVENT_INVENTORY_FULL_UPDATE] = "EVENT_INVENTORY_FULL_UPDATE", [EVENT_INVENTORY_IS_FULL] = "EVENT_INVENTORY_IS_FULL", [EVENT_INVENTORY_ITEMS_AUTO_TRANSFERRED_TO_CRAFT_BAG] = "EVENT_INVENTORY_ITEMS_AUTO_TRANSFERRED_TO_CRAFT_BAG", [EVENT_INVENTORY_ITEM_DESTROYED] = "EVENT_INVENTORY_ITEM_DESTROYED", [EVENT_INVENTORY_ITEM_USED] = "EVENT_INVENTORY_ITEM_USED", [EVENT_INVENTORY_SINGLE_SLOT_UPDATE] = "EVENT_INVENTORY_SINGLE_SLOT_UPDATE", [EVENT_INVENTORY_SLOT_LOCKED] = "EVENT_INVENTORY_SLOT_LOCKED", [EVENT_INVENTORY_SLOT_UNLOCKED] = "EVENT_INVENTORY_SLOT_UNLOCKED", [EVENT_ITEM_COMBINATION_RESULT] = "EVENT_ITEM_COMBINATION_RESULT", [EVENT_ITEM_LAUNDER_RESULT] = "EVENT_ITEM_LAUNDER_RESULT", [EVENT_ITEM_ON_COOLDOWN] = "EVENT_ITEM_ON_COOLDOWN", [EVENT_ITEM_REPAIR_FAILURE] = "EVENT_ITEM_REPAIR_FAILURE", [EVENT_ITEM_SET_COLLECTIONS_SEARCH_RESULTS_READY] = "EVENT_ITEM_SET_COLLECTIONS_SEARCH_RESULTS_READY", [EVENT_ITEM_SET_COLLECTIONS_UPDATED] = "EVENT_ITEM_SET_COLLECTIONS_UPDATED", [EVENT_ITEM_SET_COLLECTION_SLOT_NEW_STATUS_CLEARED] = "EVENT_ITEM_SET_COLLECTION_SLOT_NEW_STATUS_CLEARED", [EVENT_ITEM_SET_COLLECTION_UPDATED] = "EVENT_ITEM_SET_COLLECTION_UPDATED", [EVENT_ITEM_SLOT_CHANGED] = "EVENT_ITEM_SLOT_CHANGED", [EVENT_JUSTICE_BEING_ARRESTED] = "EVENT_JUSTICE_BEING_ARRESTED", [EVENT_JUSTICE_BOUNTY_PAYOFF_AMOUNT_UPDATED] = "EVENT_JUSTICE_BOUNTY_PAYOFF_AMOUNT_UPDATED", [EVENT_JUSTICE_FENCE_UPDATE] = "EVENT_JUSTICE_FENCE_UPDATE", [EVENT_JUSTICE_GOLD_PICKPOCKETED] = "EVENT_JUSTICE_GOLD_PICKPOCKETED", [EVENT_JUSTICE_GOLD_REMOVED] = "EVENT_JUSTICE_GOLD_REMOVED", [EVENT_JUSTICE_INFAMY_UPDATED] = "EVENT_JUSTICE_INFAMY_UPDATED", [EVENT_JUSTICE_NOW_KOS] = "EVENT_JUSTICE_NOW_KOS", [EVENT_JUSTICE_NO_LONGER_KOS] = "EVENT_JUSTICE_NO_LONGER_KOS", [EVENT_JUSTICE_PICKPOCKET_FAILED] = "EVENT_JUSTICE_PICKPOCKET_FAILED", [EVENT_JUSTICE_STOLEN_ITEMS_REMOVED] = "EVENT_JUSTICE_STOLEN_ITEMS_REMOVED", [EVENT_KEEPS_INITIALIZED] = "EVENT_KEEPS_INITIALIZED", [EVENT_KEEP_ALLIANCE_OWNER_CHANGED] = "EVENT_KEEP_ALLIANCE_OWNER_CHANGED", [EVENT_KEEP_END_INTERACTION] = "EVENT_KEEP_END_INTERACTION", [EVENT_KEEP_GATE_STATE_CHANGED] = "EVENT_KEEP_GATE_STATE_CHANGED", [EVENT_KEEP_GUILD_CLAIM_UPDATE] = "EVENT_KEEP_GUILD_CLAIM_UPDATE", [EVENT_KEEP_INITIALIZED] = "EVENT_KEEP_INITIALIZED", [EVENT_KEEP_IS_PASSABLE_CHANGED] = "EVENT_KEEP_IS_PASSABLE_CHANGED", [EVENT_KEEP_PIECE_DIRECTIONAL_ACCESS_CHANGED] = "EVENT_KEEP_PIECE_DIRECTIONAL_ACCESS_CHANGED", [EVENT_KEEP_RESOURCE_UPDATE] = "EVENT_KEEP_RESOURCE_UPDATE", [EVENT_KEEP_START_INTERACTION] = "EVENT_KEEP_START_INTERACTION", [EVENT_KEEP_UNDER_ATTACK_CHANGED] = "EVENT_KEEP_UNDER_ATTACK_CHANGED", [EVENT_KILL_LOCATIONS_UPDATED] = "EVENT_KILL_LOCATIONS_UPDATED", [EVENT_LEADER_UPDATE] = "EVENT_LEADER_UPDATE", [EVENT_LEAVE_CAMPAIGN_QUEUE_RESPONSE] = "EVENT_LEAVE_CAMPAIGN_QUEUE_RESPONSE", [EVENT_LEAVE_RAM_ESCORT] = "EVENT_LEAVE_RAM_ESCORT", [EVENT_LEVEL_UPDATE] = "EVENT_LEVEL_UPDATE", [EVENT_LEVEL_UP_REWARD_CHOICE_UPDATED] = "EVENT_LEVEL_UP_REWARD_CHOICE_UPDATED", [EVENT_LEVEL_UP_REWARD_UPDATED] = "EVENT_LEVEL_UP_REWARD_UPDATED", [EVENT_LINKED_WORLD_POSITION_CHANGED] = "EVENT_LINKED_WORLD_POSITION_CHANGED", [EVENT_LOCAL_PLAYER_MODEL_REBUILT] = "EVENT_LOCAL_PLAYER_MODEL_REBUILT", [EVENT_LOCKPICK_BROKE] = "EVENT_LOCKPICK_BROKE", [EVENT_LOCKPICK_FAILED] = "EVENT_LOCKPICK_FAILED", [EVENT_LOCKPICK_SUCCESS] = "EVENT_LOCKPICK_SUCCESS", [EVENT_LOGOUT_DEFERRED] = "EVENT_LOGOUT_DEFERRED", [EVENT_LOGOUT_DISALLOWED] = "EVENT_LOGOUT_DISALLOWED", [EVENT_LOOT_CLOSED] = "EVENT_LOOT_CLOSED", [EVENT_LOOT_ITEM_FAILED] = "EVENT_LOOT_ITEM_FAILED", [EVENT_LOOT_RECEIVED] = "EVENT_LOOT_RECEIVED", [EVENT_LOOT_UPDATED] = "EVENT_LOOT_UPDATED", [EVENT_LORE_BOOK_ALREADY_KNOWN] = "EVENT_LORE_BOOK_ALREADY_KNOWN", [EVENT_LORE_BOOK_LEARNED] = "EVENT_LORE_BOOK_LEARNED", [EVENT_LORE_BOOK_LEARNED_SKILL_EXPERIENCE] = "EVENT_LORE_BOOK_LEARNED_SKILL_EXPERIENCE", [EVENT_LORE_COLLECTION_COMPLETED] = "EVENT_LORE_COLLECTION_COMPLETED", [EVENT_LORE_COLLECTION_COMPLETED_SKILL_EXPERIENCE] = "EVENT_LORE_COLLECTION_COMPLETED_SKILL_EXPERIENCE", [EVENT_LORE_LIBRARY_INITIALIZED] = "EVENT_LORE_LIBRARY_INITIALIZED", [EVENT_LOW_FALL_DAMAGE] = "EVENT_LOW_FALL_DAMAGE", [EVENT_MAIL_ATTACHED_MONEY_CHANGED] = "EVENT_MAIL_ATTACHED_MONEY_CHANGED", [EVENT_MAIL_ATTACHMENT_ADDED] = "EVENT_MAIL_ATTACHMENT_ADDED", [EVENT_MAIL_ATTACHMENT_REMOVED] = "EVENT_MAIL_ATTACHMENT_REMOVED", [EVENT_MAIL_CLOSE_MAILBOX] = "EVENT_MAIL_CLOSE_MAILBOX", [EVENT_MAIL_COD_CHANGED] = "EVENT_MAIL_COD_CHANGED", [EVENT_MAIL_INBOX_UPDATE] = "EVENT_MAIL_INBOX_UPDATE", [EVENT_MAIL_NUM_UNREAD_CHANGED] = "EVENT_MAIL_NUM_UNREAD_CHANGED", [EVENT_MAIL_OPEN_MAILBOX] = "EVENT_MAIL_OPEN_MAILBOX", [EVENT_MAIL_READABLE] = "EVENT_MAIL_READABLE", [EVENT_MAIL_REMOVED] = "EVENT_MAIL_REMOVED", [EVENT_MAIL_SEND_FAILED] = "EVENT_MAIL_SEND_FAILED", [EVENT_MAIL_SEND_SUCCESS] = "EVENT_MAIL_SEND_SUCCESS", [EVENT_MAIL_TAKE_ATTACHED_ITEM_SUCCESS] = "EVENT_MAIL_TAKE_ATTACHED_ITEM_SUCCESS", [EVENT_MAIL_TAKE_ATTACHED_MONEY_SUCCESS] = "EVENT_MAIL_TAKE_ATTACHED_MONEY_SUCCESS", [EVENT_MAP_PING] = "EVENT_MAP_PING", [EVENT_MARKET_PRODUCTS_UNLOCKED] = "EVENT_MARKET_PRODUCTS_UNLOCKED", [EVENT_MARKET_PRODUCTS_UNLOCKED_NOTIFICATIONS_CLEARED] = "EVENT_MARKET_PRODUCTS_UNLOCKED_NOTIFICATIONS_CLEARED", [EVENT_MATCH_TRADING_HOUSE_ITEM_NAMES_COMPLETE] = "EVENT_MATCH_TRADING_HOUSE_ITEM_NAMES_COMPLETE", [EVENT_MEDAL_AWARDED] = "EVENT_MEDAL_AWARDED", [EVENT_MONEY_UPDATE] = "EVENT_MONEY_UPDATE", [EVENT_MOUNTED_STATE_CHANGED] = "EVENT_MOUNTED_STATE_CHANGED", [EVENT_MOUNT_FAILURE] = "EVENT_MOUNT_FAILURE", [EVENT_MOUNT_INFO_UPDATED] = "EVENT_MOUNT_INFO_UPDATED", [EVENT_MOUSE_REQUEST_ABANDON_QUEST] = "EVENT_MOUSE_REQUEST_ABANDON_QUEST", [EVENT_MOUSE_REQUEST_DESTROY_ITEM] = "EVENT_MOUSE_REQUEST_DESTROY_ITEM", [EVENT_MOUSE_REQUEST_DESTROY_ITEM_FAILED] = "EVENT_MOUSE_REQUEST_DESTROY_ITEM_FAILED", [EVENT_MULTIPLE_RECIPES_LEARNED] = "EVENT_MULTIPLE_RECIPES_LEARNED", [EVENT_MURDERBALL_STATE_CHANGED] = "EVENT_MURDERBALL_STATE_CHANGED", [EVENT_NEW_MOVEMENT_IN_UI_MODE] = "EVENT_NEW_MOVEMENT_IN_UI_MODE", [EVENT_NON_COMBAT_BONUS_CHANGED] = "EVENT_NON_COMBAT_BONUS_CHANGED", [EVENT_NOT_ENOUGH_MONEY] = "EVENT_NOT_ENOUGH_MONEY", [EVENT_NO_DAEDRIC_PICKUP_AS_EMPEROR] = "EVENT_NO_DAEDRIC_PICKUP_AS_EMPEROR", [EVENT_NO_DAEDRIC_PICKUP_WHEN_STEALTHED] = "EVENT_NO_DAEDRIC_PICKUP_WHEN_STEALTHED", [EVENT_NO_INTERACT_TARGET] = "EVENT_NO_INTERACT_TARGET", [EVENT_OBJECTIVES_UPDATED] = "EVENT_OBJECTIVES_UPDATED", [EVENT_OBJECTIVE_COMPLETED] = "EVENT_OBJECTIVE_COMPLETED", [EVENT_OBJECTIVE_CONTROL_STATE] = "EVENT_OBJECTIVE_CONTROL_STATE", [EVENT_OPEN_BANK] = "EVENT_OPEN_BANK", [EVENT_OPEN_COMPANION_MENU] = "EVENT_OPEN_COMPANION_MENU", [EVENT_OPEN_FENCE] = "EVENT_OPEN_FENCE", [EVENT_OPEN_GUILD_BANK] = "EVENT_OPEN_GUILD_BANK", [EVENT_OPEN_HOUSE_STORE] = "EVENT_OPEN_HOUSE_STORE", [EVENT_OPEN_STORE] = "EVENT_OPEN_STORE", [EVENT_OPEN_TIMED_ACTIVITIES] = "EVENT_OPEN_TIMED_ACTIVITIES", [EVENT_OPEN_TRADING_HOUSE] = "EVENT_OPEN_TRADING_HOUSE", [EVENT_OPEN_UI_SYSTEM] = "EVENT_OPEN_UI_SYSTEM", [EVENT_OUTFITS_INITIALIZED] = "EVENT_OUTFITS_INITIALIZED", [EVENT_OUTFIT_CHANGE_RESPONSE] = "EVENT_OUTFIT_CHANGE_RESPONSE", [EVENT_OUTFIT_EQUIP_RESPONSE] = "EVENT_OUTFIT_EQUIP_RESPONSE", [EVENT_OUTFIT_RENAME_RESPONSE] = "EVENT_OUTFIT_RENAME_RESPONSE", [EVENT_PATH_FINDING_NETWORK_LINK_CHANGED] = "EVENT_PATH_FINDING_NETWORK_LINK_CHANGED", [EVENT_PENDING_INTERACTION_CANCELLED] = "EVENT_PENDING_INTERACTION_CANCELLED", [EVENT_PERSONALITY_CHANGED] = "EVENT_PERSONALITY_CHANGED", [EVENT_PICKPOCKET_STATE_UPDATED] = "EVENT_PICKPOCKET_STATE_UPDATED", [EVENT_PLAYER_ACTIVELY_ENGAGED_STATE] = "EVENT_PLAYER_ACTIVELY_ENGAGED_STATE", [EVENT_PLAYER_ALIVE] = "EVENT_PLAYER_ALIVE", [EVENT_PLAYER_COMBAT_STATE] = "EVENT_PLAYER_COMBAT_STATE", [EVENT_PLAYER_DEAD] = "EVENT_PLAYER_DEAD", [EVENT_PLAYER_DEATH_INFO_UPDATE] = "EVENT_PLAYER_DEATH_INFO_UPDATE", [EVENT_PLAYER_DEATH_REQUEST_FAILURE] = "EVENT_PLAYER_DEATH_REQUEST_FAILURE", [EVENT_PLAYER_EMOTE_FAILED_PLAY] = "EVENT_PLAYER_EMOTE_FAILED_PLAY", [EVENT_PLAYER_IN_PIN_AREA_CHANGED] = "EVENT_PLAYER_IN_PIN_AREA_CHANGED", [EVENT_PLAYER_NOT_SWIMMING] = "EVENT_PLAYER_NOT_SWIMMING", [EVENT_PLAYER_QUEUED_FOR_CYCLIC_RESPAWN] = "EVENT_PLAYER_QUEUED_FOR_CYCLIC_RESPAWN", [EVENT_PLAYER_REINCARNATED] = "EVENT_PLAYER_REINCARNATED", [EVENT_PLAYER_STUNNED_STATE_CHANGED] = "EVENT_PLAYER_STUNNED_STATE_CHANGED", [EVENT_PLAYER_SWIMMING] = "EVENT_PLAYER_SWIMMING", [EVENT_PLAYER_TITLES_UPDATE] = "EVENT_PLAYER_TITLES_UPDATE", [EVENT_PLEDGE_OF_MARA_OFFER] = "EVENT_PLEDGE_OF_MARA_OFFER", [EVENT_PLEDGE_OF_MARA_OFFER_REMOVED] = "EVENT_PLEDGE_OF_MARA_OFFER_REMOVED", [EVENT_PLEDGE_OF_MARA_RESULT] = "EVENT_PLEDGE_OF_MARA_RESULT", [EVENT_POIS_INITIALIZED] = "EVENT_POIS_INITIALIZED", [EVENT_POI_DISCOVERED] = "EVENT_POI_DISCOVERED", [EVENT_POI_UPDATED] = "EVENT_POI_UPDATED", [EVENT_POWER_UPDATE] = "EVENT_POWER_UPDATE", [EVENT_QUEST_ADDED] = "EVENT_QUEST_ADDED", [EVENT_QUEST_ADVANCED] = "EVENT_QUEST_ADVANCED", [EVENT_QUEST_COMPLETE] = "EVENT_QUEST_COMPLETE", [EVENT_QUEST_COMPLETE_ATTEMPT_FAILED_INVENTORY_FULL] = "EVENT_QUEST_COMPLETE_ATTEMPT_FAILED_INVENTORY_FULL", [EVENT_QUEST_COMPLETE_DIALOG] = "EVENT_QUEST_COMPLETE_DIALOG", [EVENT_QUEST_CONDITION_COUNTER_CHANGED] = "EVENT_QUEST_CONDITION_COUNTER_CHANGED", [EVENT_QUEST_CONDITION_OVERRIDE_TEXT_CHANGED] = "EVENT_QUEST_CONDITION_OVERRIDE_TEXT_CHANGED", [EVENT_QUEST_LIST_UPDATED] = "EVENT_QUEST_LIST_UPDATED", [EVENT_QUEST_LOG_IS_FULL] = "EVENT_QUEST_LOG_IS_FULL", [EVENT_QUEST_OFFERED] = "EVENT_QUEST_OFFERED", [EVENT_QUEST_OPTIONAL_STEP_ADVANCED] = "EVENT_QUEST_OPTIONAL_STEP_ADVANCED", [EVENT_QUEST_POSITION_REQUEST_COMPLETE] = "EVENT_QUEST_POSITION_REQUEST_COMPLETE", [EVENT_QUEST_REMOVED] = "EVENT_QUEST_REMOVED", [EVENT_QUEST_SHARED] = "EVENT_QUEST_SHARED", [EVENT_QUEST_SHARE_REMOVED] = "EVENT_QUEST_SHARE_REMOVED", [EVENT_QUEST_SHARE_RESULT] = "EVENT_QUEST_SHARE_RESULT", [EVENT_QUEST_SHOW_JOURNAL_ENTRY] = "EVENT_QUEST_SHOW_JOURNAL_ENTRY", [EVENT_QUEST_TIMER_PAUSED] = "EVENT_QUEST_TIMER_PAUSED", [EVENT_QUEST_TIMER_UPDATED] = "EVENT_QUEST_TIMER_UPDATED", [EVENT_QUEST_TOOL_UPDATED] = "EVENT_QUEST_TOOL_UPDATED", [EVENT_QUEUE_FOR_CAMPAIGN_RESPONSE] = "EVENT_QUEUE_FOR_CAMPAIGN_RESPONSE", [EVENT_RAID_LEADERBOARD_DATA_CHANGED] = "EVENT_RAID_LEADERBOARD_DATA_CHANGED", [EVENT_RAID_LEADERBOARD_PLAYER_DATA_CHANGED] = "EVENT_RAID_LEADERBOARD_PLAYER_DATA_CHANGED", [EVENT_RAID_PARTICIPATION_UPDATE] = "EVENT_RAID_PARTICIPATION_UPDATE", [EVENT_RAID_REVIVE_COUNTER_UPDATE] = "EVENT_RAID_REVIVE_COUNTER_UPDATE", [EVENT_RAID_SCORE_NOTIFICATION_ADDED] = "EVENT_RAID_SCORE_NOTIFICATION_ADDED", [EVENT_RAID_SCORE_NOTIFICATION_REMOVED] = "EVENT_RAID_SCORE_NOTIFICATION_REMOVED", [EVENT_RAID_TIMER_STATE_UPDATE] = "EVENT_RAID_TIMER_STATE_UPDATE", [EVENT_RAID_TRIAL_COMPLETE] = "EVENT_RAID_TRIAL_COMPLETE", [EVENT_RAID_TRIAL_FAILED] = "EVENT_RAID_TRIAL_FAILED", [EVENT_RAID_TRIAL_NEW_BEST_SCORE] = "EVENT_RAID_TRIAL_NEW_BEST_SCORE", [EVENT_RAID_TRIAL_RESET_BEST_SCORE] = "EVENT_RAID_TRIAL_RESET_BEST_SCORE", [EVENT_RAID_TRIAL_SCORE_UPDATE] = "EVENT_RAID_TRIAL_SCORE_UPDATE", [EVENT_RAID_TRIAL_STARTED] = "EVENT_RAID_TRIAL_STARTED", [EVENT_RAM_ESCORT_COUNT_UPDATE] = "EVENT_RAM_ESCORT_COUNT_UPDATE", [EVENT_RANK_POINT_UPDATE] = "EVENT_RANK_POINT_UPDATE", [EVENT_RECALL_KEEP_USE_RESULT] = "EVENT_RECALL_KEEP_USE_RESULT", [EVENT_RECIPE_ALREADY_KNOWN] = "EVENT_RECIPE_ALREADY_KNOWN", [EVENT_RECIPE_LEARNED] = "EVENT_RECIPE_LEARNED", [EVENT_RECONSTRUCT_RESPONSE] = "EVENT_RECONSTRUCT_RESPONSE", [EVENT_RECONSTRUCT_STARTED] = "EVENT_RECONSTRUCT_STARTED", [EVENT_REMOVE_ACTIVE_COMBAT_TIP] = "EVENT_REMOVE_ACTIVE_COMBAT_TIP", [EVENT_REMOVE_TUTORIAL] = "EVENT_REMOVE_TUTORIAL", [EVENT_REQUEST_ALERT] = "EVENT_REQUEST_ALERT", [EVENT_REQUEST_CONFIRM_USE_ITEM] = "EVENT_REQUEST_CONFIRM_USE_ITEM", [EVENT_REQUEST_SHOW_GIFT_INVENTORY] = "EVENT_REQUEST_SHOW_GIFT_INVENTORY", [EVENT_REQUIREMENTS_FAIL] = "EVENT_REQUIREMENTS_FAIL", [EVENT_RESURRECT_REQUEST] = "EVENT_RESURRECT_REQUEST", [EVENT_RESURRECT_REQUEST_REMOVED] = "EVENT_RESURRECT_REQUEST_REMOVED", [EVENT_RESURRECT_RESULT] = "EVENT_RESURRECT_RESULT", [EVENT_RETICLE_HIDDEN_UPDATE] = "EVENT_RETICLE_HIDDEN_UPDATE", [EVENT_RETICLE_TARGET_CHANGED] = "EVENT_RETICLE_TARGET_CHANGED", [EVENT_RETICLE_TARGET_COMPANION_CHANGED] = "EVENT_RETICLE_TARGET_COMPANION_CHANGED", [EVENT_RETICLE_TARGET_PLAYER_CHANGED] = "EVENT_RETICLE_TARGET_PLAYER_CHANGED", [EVENT_RETRAIT_RESPONSE] = "EVENT_RETRAIT_RESPONSE", [EVENT_RETRAIT_STARTED] = "EVENT_RETRAIT_STARTED", [EVENT_RETRAIT_STATION_INTERACT_START] = "EVENT_RETRAIT_STATION_INTERACT_START", [EVENT_REVEAL_ANTIQUITY_DIG_SITES_ON_MAP] = "EVENT_REVEAL_ANTIQUITY_DIG_SITES_ON_MAP", [EVENT_REVENGE_KILL] = "EVENT_REVENGE_KILL", [EVENT_RIDING_SKILL_IMPROVEMENT] = "EVENT_RIDING_SKILL_IMPROVEMENT", [EVENT_SCREENSHOT_SAVED] = "EVENT_SCREENSHOT_SAVED", [EVENT_SCRIPTED_WORLD_EVENT_INVITE] = "EVENT_SCRIPTED_WORLD_EVENT_INVITE", [EVENT_SCRIPTED_WORLD_EVENT_INVITE_REMOVED] = "EVENT_SCRIPTED_WORLD_EVENT_INVITE_REMOVED", [EVENT_SCRYING_EXIT_RESPONSE] = "EVENT_SCRYING_EXIT_RESPONSE", [EVENT_SELL_RECEIPT] = "EVENT_SELL_RECEIPT", [EVENT_SHOW_BOOK] = "EVENT_SHOW_BOOK", [EVENT_SHOW_DAILY_LOGIN_REWARDS_SCENE] = "EVENT_SHOW_DAILY_LOGIN_REWARDS_SCENE", [EVENT_SHOW_SPECIFIC_HELP_PAGE] = "EVENT_SHOW_SPECIFIC_HELP_PAGE", [EVENT_SHOW_SUBTITLE] = "EVENT_SHOW_SUBTITLE", [EVENT_SHOW_TREASURE_MAP] = "EVENT_SHOW_TREASURE_MAP", [EVENT_SHOW_WORLD_MAP] = "EVENT_SHOW_WORLD_MAP", [EVENT_SHOW_ZONE_STORIES_SCENE] = "EVENT_SHOW_ZONE_STORIES_SCENE", [EVENT_SIEGE_BUSY] = "EVENT_SIEGE_BUSY", [EVENT_SIEGE_CONTROL_ANOTHER_PLAYER] = "EVENT_SIEGE_CONTROL_ANOTHER_PLAYER", [EVENT_SIEGE_CREATION_FAILED_CLOSEST_DOOR_ALREADY_HAS_RAM] = "EVENT_SIEGE_CREATION_FAILED_CLOSEST_DOOR_ALREADY_HAS_RAM", [EVENT_SIEGE_CREATION_FAILED_NO_VALID_DOOR] = "EVENT_SIEGE_CREATION_FAILED_NO_VALID_DOOR", [EVENT_SIEGE_FIRE_FAILED_COOLDOWN] = "EVENT_SIEGE_FIRE_FAILED_COOLDOWN", [EVENT_SIEGE_FIRE_FAILED_RETARGETING] = "EVENT_SIEGE_FIRE_FAILED_RETARGETING", [EVENT_SIEGE_PACK_FAILED_INVENTORY_FULL] = "EVENT_SIEGE_PACK_FAILED_INVENTORY_FULL", [EVENT_SIEGE_PACK_FAILED_NOT_CREATOR] = "EVENT_SIEGE_PACK_FAILED_NOT_CREATOR", [EVENT_SKILLS_FULL_UPDATE] = "EVENT_SKILLS_FULL_UPDATE", [EVENT_SKILL_BUILD_SELECTION_UPDATED] = "EVENT_SKILL_BUILD_SELECTION_UPDATED", [EVENT_SKILL_LINE_ADDED] = "EVENT_SKILL_LINE_ADDED", [EVENT_SKILL_POINTS_CHANGED] = "EVENT_SKILL_POINTS_CHANGED", [EVENT_SKILL_RANK_UPDATE] = "EVENT_SKILL_RANK_UPDATE", [EVENT_SKILL_RESPEC_RESULT] = "EVENT_SKILL_RESPEC_RESULT", [EVENT_SKILL_XP_UPDATE] = "EVENT_SKILL_XP_UPDATE", [EVENT_SLOT_IS_LOCKED_FAILURE] = "EVENT_SLOT_IS_LOCKED_FAILURE", [EVENT_SMITHING_TRAIT_RESEARCH_CANCELED] = "EVENT_SMITHING_TRAIT_RESEARCH_CANCELED", [EVENT_SMITHING_TRAIT_RESEARCH_COMPLETED] = "EVENT_SMITHING_TRAIT_RESEARCH_COMPLETED", [EVENT_SMITHING_TRAIT_RESEARCH_STARTED] = "EVENT_SMITHING_TRAIT_RESEARCH_STARTED", [EVENT_SMITHING_TRAIT_RESEARCH_TIMES_UPDATED] = "EVENT_SMITHING_TRAIT_RESEARCH_TIMES_UPDATED", [EVENT_SOUL_GEM_ITEM_CHARGE_FAILURE] = "EVENT_SOUL_GEM_ITEM_CHARGE_FAILURE", [EVENT_SPAM_WARNING] = "EVENT_SPAM_WARNING", [EVENT_STABLE_INTERACT_END] = "EVENT_STABLE_INTERACT_END", [EVENT_STABLE_INTERACT_START] = "EVENT_STABLE_INTERACT_START", [EVENT_STACKED_ALL_ITEMS_IN_BAG] = "EVENT_STACKED_ALL_ITEMS_IN_BAG", [EVENT_START_FAST_TRAVEL_INTERACTION] = "EVENT_START_FAST_TRAVEL_INTERACTION", [EVENT_START_FAST_TRAVEL_KEEP_INTERACTION] = "EVENT_START_FAST_TRAVEL_KEEP_INTERACTION", [EVENT_START_KEEP_GUILD_CLAIM_INTERACTION] = "EVENT_START_KEEP_GUILD_CLAIM_INTERACTION", [EVENT_START_KEEP_GUILD_RELEASE_INTERACTION] = "EVENT_START_KEEP_GUILD_RELEASE_INTERACTION", [EVENT_START_SKILL_RESPEC] = "EVENT_START_SKILL_RESPEC", [EVENT_START_SOUL_GEM_RESURRECTION] = "EVENT_START_SOUL_GEM_RESURRECTION", [EVENT_STATS_UPDATED] = "EVENT_STATS_UPDATED", [EVENT_STEALTH_STATE_CHANGED] = "EVENT_STEALTH_STATE_CHANGED", [EVENT_STORE_FAILURE] = "EVENT_STORE_FAILURE", [EVENT_STUCK_BEGIN] = "EVENT_STUCK_BEGIN", [EVENT_STUCK_CANCELED] = "EVENT_STUCK_CANCELED", [EVENT_STUCK_COMPLETE] = "EVENT_STUCK_COMPLETE", [EVENT_STUCK_ERROR_ALREADY_IN_PROGRESS] = "EVENT_STUCK_ERROR_ALREADY_IN_PROGRESS", [EVENT_STUCK_ERROR_INVALID_LOCATION] = "EVENT_STUCK_ERROR_INVALID_LOCATION", [EVENT_STUCK_ERROR_IN_COMBAT] = "EVENT_STUCK_ERROR_IN_COMBAT", [EVENT_STUCK_ERROR_ON_COOLDOWN] = "EVENT_STUCK_ERROR_ON_COOLDOWN", [EVENT_STYLE_LEARNED] = "EVENT_STYLE_LEARNED", [EVENT_SUBSCRIBER_BANK_IS_LOCKED] = "EVENT_SUBSCRIBER_BANK_IS_LOCKED", [EVENT_SYNERGY_ABILITY_CHANGED] = "EVENT_SYNERGY_ABILITY_CHANGED", [EVENT_TARGET_CHANGED] = "EVENT_TARGET_CHANGED", [EVENT_TELVAR_STONE_UPDATE] = "EVENT_TELVAR_STONE_UPDATE", [EVENT_TIMED_ACTIVITIES_UPDATED] = "EVENT_TIMED_ACTIVITIES_UPDATED", [EVENT_TIMED_ACTIVITY_PROGRESS_UPDATED] = "EVENT_TIMED_ACTIVITY_PROGRESS_UPDATED", [EVENT_TIMED_ACTIVITY_SYSTEM_STATUS_UPDATED] = "EVENT_TIMED_ACTIVITY_SYSTEM_STATUS_UPDATED", [EVENT_TIMED_ACTIVITY_TYPE_PROGRESS_UPDATED] = "EVENT_TIMED_ACTIVITY_TYPE_PROGRESS_UPDATED", [EVENT_TITLE_UPDATE] = "EVENT_TITLE_UPDATE", [EVENT_TOGGLE_HELP] = "EVENT_TOGGLE_HELP", [EVENT_TRACKED_ZONE_STORY_ACTIVITY_COMPLETED] = "EVENT_TRACKED_ZONE_STORY_ACTIVITY_COMPLETED", [EVENT_TRACKING_UPDATE] = "EVENT_TRACKING_UPDATE", [EVENT_TRADE_ACCEPT_FAILED_NOT_ENOUGH_MONEY] = "EVENT_TRADE_ACCEPT_FAILED_NOT_ENOUGH_MONEY", [EVENT_TRADE_CANCELED] = "EVENT_TRADE_CANCELED", [EVENT_TRADE_CONFIRMATION_CHANGED] = "EVENT_TRADE_CONFIRMATION_CHANGED", [EVENT_TRADE_ELEVATION_FAILED] = "EVENT_TRADE_ELEVATION_FAILED", [EVENT_TRADE_FAILED] = "EVENT_TRADE_FAILED", [EVENT_TRADE_INVITE_ACCEPTED] = "EVENT_TRADE_INVITE_ACCEPTED", [EVENT_TRADE_INVITE_CANCELED] = "EVENT_TRADE_INVITE_CANCELED", [EVENT_TRADE_INVITE_CONSIDERING] = "EVENT_TRADE_INVITE_CONSIDERING", [EVENT_TRADE_INVITE_DECLINED] = "EVENT_TRADE_INVITE_DECLINED", [EVENT_TRADE_INVITE_FAILED] = "EVENT_TRADE_INVITE_FAILED", [EVENT_TRADE_INVITE_REMOVED] = "EVENT_TRADE_INVITE_REMOVED", [EVENT_TRADE_INVITE_WAITING] = "EVENT_TRADE_INVITE_WAITING", [EVENT_TRADE_ITEM_ADDED] = "EVENT_TRADE_ITEM_ADDED", [EVENT_TRADE_ITEM_ADD_FAILED] = "EVENT_TRADE_ITEM_ADD_FAILED", [EVENT_TRADE_ITEM_REMOVED] = "EVENT_TRADE_ITEM_REMOVED", [EVENT_TRADE_ITEM_UPDATED] = "EVENT_TRADE_ITEM_UPDATED", [EVENT_TRADE_MONEY_CHANGED] = "EVENT_TRADE_MONEY_CHANGED", [EVENT_TRADE_SUCCEEDED] = "EVENT_TRADE_SUCCEEDED", [EVENT_TRADING_HOUSE_AWAITING_RESPONSE] = "EVENT_TRADING_HOUSE_AWAITING_RESPONSE", [EVENT_TRADING_HOUSE_CONFIRM_ITEM_PURCHASE] = "EVENT_TRADING_HOUSE_CONFIRM_ITEM_PURCHASE", [EVENT_TRADING_HOUSE_ERROR] = "EVENT_TRADING_HOUSE_ERROR", [EVENT_TRADING_HOUSE_OPERATION_TIME_OUT] = "EVENT_TRADING_HOUSE_OPERATION_TIME_OUT", [EVENT_TRADING_HOUSE_PENDING_ITEM_UPDATE] = "EVENT_TRADING_HOUSE_PENDING_ITEM_UPDATE", [EVENT_TRADING_HOUSE_RESPONSE_RECEIVED] = "EVENT_TRADING_HOUSE_RESPONSE_RECEIVED", [EVENT_TRADING_HOUSE_RESPONSE_TIMEOUT] = "EVENT_TRADING_HOUSE_RESPONSE_TIMEOUT", [EVENT_TRADING_HOUSE_SEARCH_COOLDOWN_UPDATE] = "EVENT_TRADING_HOUSE_SEARCH_COOLDOWN_UPDATE", [EVENT_TRADING_HOUSE_SELECTED_GUILD_CHANGED] = "EVENT_TRADING_HOUSE_SELECTED_GUILD_CHANGED", [EVENT_TRADING_HOUSE_STATUS_RECEIVED] = "EVENT_TRADING_HOUSE_STATUS_RECEIVED", [EVENT_TRAIT_LEARNED] = "EVENT_TRAIT_LEARNED", [EVENT_TRIAL_FEATURE_RESTRICTED] = "EVENT_TRIAL_FEATURE_RESTRICTED", [EVENT_TUTORIALS_RESET] = "EVENT_TUTORIALS_RESET", [EVENT_TUTORIAL_SYSTEM_ENABLED_STATE_CHANGED] = "EVENT_TUTORIAL_SYSTEM_ENABLED_STATE_CHANGED", [EVENT_TUTORIAL_TRIGGER_COMPLETED] = "EVENT_TUTORIAL_TRIGGER_COMPLETED", [EVENT_UI_ERROR] = "EVENT_UI_ERROR", [EVENT_UNIT_ATTRIBUTE_VISUAL_ADDED] = "EVENT_UNIT_ATTRIBUTE_VISUAL_ADDED", [EVENT_UNIT_ATTRIBUTE_VISUAL_REMOVED] = "EVENT_UNIT_ATTRIBUTE_VISUAL_REMOVED", [EVENT_UNIT_ATTRIBUTE_VISUAL_UPDATED] = "EVENT_UNIT_ATTRIBUTE_VISUAL_UPDATED", [EVENT_UNIT_CHARACTER_NAME_CHANGED] = "EVENT_UNIT_CHARACTER_NAME_CHANGED", [EVENT_UNIT_CREATED] = "EVENT_UNIT_CREATED", [EVENT_UNIT_DEATH_STATE_CHANGED] = "EVENT_UNIT_DEATH_STATE_CHANGED", [EVENT_UNIT_DESTROYED] = "EVENT_UNIT_DESTROYED", [EVENT_UNLOCKED_DYES_UPDATED] = "EVENT_UNLOCKED_DYES_UPDATED", [EVENT_UNSPENT_CHAMPION_POINTS_CHANGED] = "EVENT_UNSPENT_CHAMPION_POINTS_CHANGED", [EVENT_UPDATE_BUYBACK] = "EVENT_UPDATE_BUYBACK", [EVENT_VETERAN_DIFFICULTY_CHANGED] = "EVENT_VETERAN_DIFFICULTY_CHANGED", [EVENT_VIBRATION] = "EVENT_VIBRATION", [EVENT_VISUAL_LAYER_CHANGED] = "EVENT_VISUAL_LAYER_CHANGED", [EVENT_WEAPON_PAIR_LOCK_CHANGED] = "EVENT_WEAPON_PAIR_LOCK_CHANGED", [EVENT_WEAPON_SWAP_LOCKED] = "EVENT_WEAPON_SWAP_LOCKED", [EVENT_WEREWOLF_STATE_CHANGED] = "EVENT_WEREWOLF_STATE_CHANGED", [EVENT_WORLD_EVENTS_INITIALIZED] = "EVENT_WORLD_EVENTS_INITIALIZED", [EVENT_WORLD_EVENT_ACTIVATED] = "EVENT_WORLD_EVENT_ACTIVATED", [EVENT_WORLD_EVENT_ACTIVE_LOCATION_CHANGED] = "EVENT_WORLD_EVENT_ACTIVE_LOCATION_CHANGED", [EVENT_WORLD_EVENT_DEACTIVATED] = "EVENT_WORLD_EVENT_DEACTIVATED", [EVENT_WORLD_EVENT_UNIT_CHANGED_PIN_TYPE] = "EVENT_WORLD_EVENT_UNIT_CHANGED_PIN_TYPE", [EVENT_WORLD_EVENT_UNIT_CREATED] = "EVENT_WORLD_EVENT_UNIT_CREATED", [EVENT_WORLD_EVENT_UNIT_DESTROYED] = "EVENT_WORLD_EVENT_UNIT_DESTROYED", [EVENT_WRIT_VOUCHER_UPDATE] = "EVENT_WRIT_VOUCHER_UPDATE", [EVENT_ZONE_CHANGED] = "EVENT_ZONE_CHANGED", [EVENT_ZONE_CHANNEL_CHANGED] = "EVENT_ZONE_CHANNEL_CHANGED", [EVENT_ZONE_COLLECTIBLE_REQUIREMENT_FAILED] = "EVENT_ZONE_COLLECTIBLE_REQUIREMENT_FAILED", [EVENT_ZONE_SCORING_CHANGED] = "EVENT_ZONE_SCORING_CHANGED", [EVENT_ZONE_STORY_ACTIVITY_TRACKED] = "EVENT_ZONE_STORY_ACTIVITY_TRACKED", [EVENT_ZONE_STORY_ACTIVITY_TRACKING_INIT] = "EVENT_ZONE_STORY_ACTIVITY_TRACKING_INIT", [EVENT_ZONE_STORY_ACTIVITY_UNTRACKED] = "EVENT_ZONE_STORY_ACTIVITY_UNTRACKED", [EVENT_ZONE_STORY_QUEST_ACTIVITY_TRACKED] = "EVENT_ZONE_STORY_QUEST_ACTIVITY_TRACKED", [EVENT_ZONE_UPDATE] = "EVENT_ZONE_UPDATE", [EVENT_ANTIQUITY_DIGGING_ANTIQUITY_UNEARTHED] = "EVENT_ANTIQUITY_DIGGING_ANTIQUITY_UNEARTHED", [EVENT_ANTIQUITY_DIGGING_BONUS_LOOT_UNEARTHED] = "EVENT_ANTIQUITY_DIGGING_BONUS_LOOT_UNEARTHED", [EVENT_ANTIQUITY_DIGGING_DIG_POWER_REFUND] = "EVENT_ANTIQUITY_DIGGING_DIG_POWER_REFUND", [EVENT_ANTIQUITY_DIGGING_GAME_OVER] = "EVENT_ANTIQUITY_DIGGING_GAME_OVER", [EVENT_ANTIQUITY_DIGGING_READY_TO_PLAY] = "EVENT_ANTIQUITY_DIGGING_READY_TO_PLAY", [EVENT_ANTIQUITY_DIG_SPOT_DIG_POWER_CHANGED] = "EVENT_ANTIQUITY_DIG_SPOT_DIG_POWER_CHANGED", [EVENT_ANTIQUITY_DIG_SPOT_DURABILITY_CHANGED] = "EVENT_ANTIQUITY_DIG_SPOT_DURABILITY_CHANGED", [EVENT_ANTIQUITY_DIG_SPOT_STABILITY_CHANGED] = "EVENT_ANTIQUITY_DIG_SPOT_STABILITY_CHANGED", [EVENT_ANTIQUITY_SCRYING_RESULT] = "EVENT_ANTIQUITY_SCRYING_RESULT", [EVENT_CROWN_GEM_UPDATE] = "EVENT_CROWN_GEM_UPDATE", [EVENT_CROWN_UPDATE] = "EVENT_CROWN_UPDATE", [EVENT_CURRENCY_UPDATE] = "EVENT_CURRENCY_UPDATE", [EVENT_DAILY_LOGIN_REWARDS_CLAIMED] = "EVENT_DAILY_LOGIN_REWARDS_CLAIMED", [EVENT_DAILY_LOGIN_REWARDS_UPDATED] = "EVENT_DAILY_LOGIN_REWARDS_UPDATED", [EVENT_ESO_PLUS_FREE_TRIAL_STATUS_CHANGED] = "EVENT_ESO_PLUS_FREE_TRIAL_STATUS_CHANGED", [EVENT_GIFT_ACTION_RESULT] = "EVENT_GIFT_ACTION_RESULT", [EVENT_ITEM_PREVIEW_READY] = "EVENT_ITEM_PREVIEW_READY", [EVENT_MARKET_ANNOUNCEMENT_UPDATED] = "EVENT_MARKET_ANNOUNCEMENT_UPDATED", [EVENT_MARKET_PRODUCT_AVAILABILITY_UPDATED] = "EVENT_MARKET_PRODUCT_AVAILABILITY_UPDATED", [EVENT_MARKET_PURCHASE_RESULT] = "EVENT_MARKET_PURCHASE_RESULT", [EVENT_MARKET_STATE_UPDATED] = "EVENT_MARKET_STATE_UPDATED", [EVENT_NEW_DAILY_LOGIN_REWARD_AVAILABLE] = "EVENT_NEW_DAILY_LOGIN_REWARD_AVAILABLE", [EVENT_PLAYER_ACTIVATED] = "EVENT_PLAYER_ACTIVATED", [EVENT_PLAYER_DEACTIVATED] = "EVENT_PLAYER_DEACTIVATED", [EVENT_REQUEST_CROWN_GEM_TUTORIAL] = "EVENT_REQUEST_CROWN_GEM_TUTORIAL", [EVENT_REQUEST_SHOW_GAMEPAD_CHAPTER_UPGRADE] = "EVENT_REQUEST_SHOW_GAMEPAD_CHAPTER_UPGRADE", [EVENT_SCRYING_ACTIVE_SKILL_USE_RESULT] = "EVENT_SCRYING_ACTIVE_SKILL_USE_RESULT", [EVENT_TUTORIAL_HIDDEN] = "EVENT_TUTORIAL_HIDDEN", [EVENT_AVAILABLE_DISPLAY_DEVICES_CHANGED] = "EVENT_AVAILABLE_DISPLAY_DEVICES_CHANGED", [EVENT_BACKGROUND_LIST_FILTER_COMPLETE] = "EVENT_BACKGROUND_LIST_FILTER_COMPLETE", [EVENT_COLLECTIBLES_UNLOCK_STATE_CHANGED] = "EVENT_COLLECTIBLES_UNLOCK_STATE_CHANGED", [EVENT_COLLECTIBLE_UPDATED] = "EVENT_COLLECTIBLE_UPDATED", [EVENT_DEFERRED_SETTING_REQUEST_COMPLETED] = "EVENT_DEFERRED_SETTING_REQUEST_COMPLETED", [EVENT_FOLLOWER_SCENE_FINISHED_FRAGMENT_TRANSITION] = "EVENT_FOLLOWER_SCENE_FINISHED_FRAGMENT_TRANSITION", [EVENT_FRIEND_ADDED] = "EVENT_FRIEND_ADDED", [EVENT_FRIEND_CHARACTER_CHAMPION_POINTS_CHANGED] = "EVENT_FRIEND_CHARACTER_CHAMPION_POINTS_CHANGED", [EVENT_FRIEND_CHARACTER_LEVEL_CHANGED] = "EVENT_FRIEND_CHARACTER_LEVEL_CHANGED", [EVENT_FRIEND_CHARACTER_UPDATED] = "EVENT_FRIEND_CHARACTER_UPDATED", [EVENT_FRIEND_CHARACTER_ZONE_CHANGED] = "EVENT_FRIEND_CHARACTER_ZONE_CHANGED", [EVENT_FRIEND_DISPLAY_NAME_CHANGED] = "EVENT_FRIEND_DISPLAY_NAME_CHANGED", [EVENT_FRIEND_HERON_INFO_BATCH_UPDATED] = "EVENT_FRIEND_HERON_INFO_BATCH_UPDATED", [EVENT_FRIEND_NOTE_UPDATED] = "EVENT_FRIEND_NOTE_UPDATED", [EVENT_FRIEND_PLAYER_STATUS_CHANGED] = "EVENT_FRIEND_PLAYER_STATUS_CHANGED", [EVENT_FRIEND_REMOVED] = "EVENT_FRIEND_REMOVED", [EVENT_FULLSCREEN_MODE_CHANGED] = "EVENT_FULLSCREEN_MODE_CHANGED", [EVENT_GAMEPAD_TYPE_CHANGED] = "EVENT_GAMEPAD_TYPE_CHANGED", [EVENT_GAME_CREDITS_READY] = "EVENT_GAME_CREDITS_READY", [EVENT_GUILD_CLAIM_KEEP_CAMPAIGN_NOTIFICATION] = "EVENT_GUILD_CLAIM_KEEP_CAMPAIGN_NOTIFICATION", [EVENT_GUILD_CLAIM_KEEP_RESPONSE] = "EVENT_GUILD_CLAIM_KEEP_RESPONSE", [EVENT_GUILD_DATA_LOADED] = "EVENT_GUILD_DATA_LOADED", [EVENT_GUILD_DESCRIPTION_CHANGED] = "EVENT_GUILD_DESCRIPTION_CHANGED", [EVENT_GUILD_HISTORY_CATEGORY_UPDATED] = "EVENT_GUILD_HISTORY_CATEGORY_UPDATED", [EVENT_GUILD_HISTORY_REFRESHED] = "EVENT_GUILD_HISTORY_REFRESHED", [EVENT_GUILD_HISTORY_RESPONSE_RECEIVED] = "EVENT_GUILD_HISTORY_RESPONSE_RECEIVED", [EVENT_GUILD_INVITES_INITIALIZED] = "EVENT_GUILD_INVITES_INITIALIZED", [EVENT_GUILD_INVITE_ADDED] = "EVENT_GUILD_INVITE_ADDED", [EVENT_GUILD_INVITE_PLAYER_SUCCESSFUL] = "EVENT_GUILD_INVITE_PLAYER_SUCCESSFUL", [EVENT_GUILD_INVITE_REMOVED] = "EVENT_GUILD_INVITE_REMOVED", [EVENT_GUILD_INVITE_TO_BLACKLISTED_PLAYER] = "EVENT_GUILD_INVITE_TO_BLACKLISTED_PLAYER", [EVENT_GUILD_KEEP_CLAIM_UPDATED] = "EVENT_GUILD_KEEP_CLAIM_UPDATED", [EVENT_GUILD_LEVEL_CHANGED] = "EVENT_GUILD_LEVEL_CHANGED", [EVENT_GUILD_LOST_KEEP_CAMPAIGN_NOTIFICATION] = "EVENT_GUILD_LOST_KEEP_CAMPAIGN_NOTIFICATION", [EVENT_GUILD_MEMBER_ADDED] = "EVENT_GUILD_MEMBER_ADDED", [EVENT_GUILD_MEMBER_CHARACTER_CHAMPION_POINTS_CHANGED] = "EVENT_GUILD_MEMBER_CHARACTER_CHAMPION_POINTS_CHANGED", [EVENT_GUILD_MEMBER_CHARACTER_LEVEL_CHANGED] = "EVENT_GUILD_MEMBER_CHARACTER_LEVEL_CHANGED", [EVENT_GUILD_MEMBER_CHARACTER_UPDATED] = "EVENT_GUILD_MEMBER_CHARACTER_UPDATED", [EVENT_GUILD_MEMBER_CHARACTER_ZONE_CHANGED] = "EVENT_GUILD_MEMBER_CHARACTER_ZONE_CHANGED", [EVENT_GUILD_MEMBER_DEMOTE_SUCCESSFUL] = "EVENT_GUILD_MEMBER_DEMOTE_SUCCESSFUL", [EVENT_GUILD_MEMBER_NOTE_CHANGED] = "EVENT_GUILD_MEMBER_NOTE_CHANGED", [EVENT_GUILD_MEMBER_PLAYER_STATUS_CHANGED] = "EVENT_GUILD_MEMBER_PLAYER_STATUS_CHANGED", [EVENT_GUILD_MEMBER_PROMOTE_SUCCESSFUL] = "EVENT_GUILD_MEMBER_PROMOTE_SUCCESSFUL", [EVENT_GUILD_MEMBER_RANK_CHANGED] = "EVENT_GUILD_MEMBER_RANK_CHANGED", [EVENT_GUILD_MEMBER_REMOVED] = "EVENT_GUILD_MEMBER_REMOVED", [EVENT_GUILD_MOTD_CHANGED] = "EVENT_GUILD_MOTD_CHANGED", [EVENT_GUILD_NAME_AVAILABLE] = "EVENT_GUILD_NAME_AVAILABLE", [EVENT_GUILD_PLAYER_RANK_CHANGED] = "EVENT_GUILD_PLAYER_RANK_CHANGED", [EVENT_GUILD_RANKS_CHANGED] = "EVENT_GUILD_RANKS_CHANGED", [EVENT_GUILD_RANK_CHANGED] = "EVENT_GUILD_RANK_CHANGED", [EVENT_GUILD_RELEASE_KEEP_CAMPAIGN_NOTIFICATION] = "EVENT_GUILD_RELEASE_KEEP_CAMPAIGN_NOTIFICATION", [EVENT_GUILD_RELEASE_KEEP_RESPONSE] = "EVENT_GUILD_RELEASE_KEEP_RESPONSE", [EVENT_GUILD_SELF_JOINED_GUILD] = "EVENT_GUILD_SELF_JOINED_GUILD", [EVENT_GUILD_SELF_LEFT_GUILD] = "EVENT_GUILD_SELF_LEFT_GUILD", [EVENT_GUILD_TRADER_HIRED_UPDATED] = "EVENT_GUILD_TRADER_HIRED_UPDATED", [EVENT_HERON_URL_REQUESTED] = "EVENT_HERON_URL_REQUESTED", [EVENT_IGNORE_ADDED] = "EVENT_IGNORE_ADDED", [EVENT_IGNORE_NOTE_UPDATED] = "EVENT_IGNORE_NOTE_UPDATED", [EVENT_IGNORE_ONLINE_CHARACTER_CHANGED] = "EVENT_IGNORE_ONLINE_CHARACTER_CHANGED", [EVENT_IGNORE_REMOVED] = "EVENT_IGNORE_REMOVED", [EVENT_INCOMING_FRIEND_INVITE_ADDED] = "EVENT_INCOMING_FRIEND_INVITE_ADDED", [EVENT_INCOMING_FRIEND_INVITE_NOTE_UPDATED] = "EVENT_INCOMING_FRIEND_INVITE_NOTE_UPDATED", [EVENT_INCOMING_FRIEND_INVITE_REMOVED] = "EVENT_INCOMING_FRIEND_INVITE_REMOVED", [EVENT_INTERFACE_SETTING_CHANGED] = "EVENT_INTERFACE_SETTING_CHANGED", [EVENT_JUMP_FAILED] = "EVENT_JUMP_FAILED", [EVENT_LEADER_TO_FOLLOWER_SYNC] = "EVENT_LEADER_TO_FOLLOWER_SYNC", [EVENT_MOST_RECENT_GAMEPAD_TYPE_CHANGED] = "EVENT_MOST_RECENT_GAMEPAD_TYPE_CHANGED", [EVENT_OUTGOING_FRIEND_INVITE_ADDED] = "EVENT_OUTGOING_FRIEND_INVITE_ADDED", [EVENT_OUTGOING_FRIEND_INVITE_REMOVED] = "EVENT_OUTGOING_FRIEND_INVITE_REMOVED", [EVENT_PLAYER_STATUS_CHANGED] = "EVENT_PLAYER_STATUS_CHANGED", [EVENT_PREPARE_FOR_JUMP] = "EVENT_PREPARE_FOR_JUMP", [EVENT_REMOTE_SCENE_REQUEST] = "EVENT_REMOTE_SCENE_REQUEST", [EVENT_REMOTE_TOP_LEVEL_CHANGE] = "EVENT_REMOTE_TOP_LEVEL_CHANGE", [EVENT_SAVE_DATA_COMPLETE] = "EVENT_SAVE_DATA_COMPLETE", [EVENT_SAVE_GUILD_RANKS_RESPONSE] = "EVENT_SAVE_GUILD_RANKS_RESPONSE", [EVENT_SET_SUBTITLE] = "EVENT_SET_SUBTITLE", [EVENT_SOCIAL_DATA_LOADED] = "EVENT_SOCIAL_DATA_LOADED", [EVENT_SOCIAL_ERROR] = "EVENT_SOCIAL_ERROR", [EVENT_VIDEO_PLAYBACK_CANCEL_STARTED] = "EVENT_VIDEO_PLAYBACK_CANCEL_STARTED", [EVENT_VIDEO_PLAYBACK_COMPLETE] = "EVENT_VIDEO_PLAYBACK_COMPLETE", [EVENT_VIDEO_PLAYBACK_CONFIRM_CANCEL] = "EVENT_VIDEO_PLAYBACK_CONFIRM_CANCEL", [EVENT_VIDEO_PLAYBACK_ERROR] = "EVENT_VIDEO_PLAYBACK_ERROR", [EVENT_ACTION_LAYER_POPPED] = "EVENT_ACTION_LAYER_POPPED", [EVENT_ACTION_LAYER_PUSHED] = "EVENT_ACTION_LAYER_PUSHED", [EVENT_ADD_ON_LOADED] = "EVENT_ADD_ON_LOADED", [EVENT_ALL_GUI_SCREENS_RESIZED] = "EVENT_ALL_GUI_SCREENS_RESIZED", [EVENT_ALL_GUI_SCREENS_RESIZE_STARTED] = "EVENT_ALL_GUI_SCREENS_RESIZE_STARTED", [EVENT_CAPS_LOCK_STATE_CHANGED] = "EVENT_CAPS_LOCK_STATE_CHANGED", [EVENT_GAMEPAD_PREFERRED_MODE_CHANGED] = "EVENT_GAMEPAD_PREFERRED_MODE_CHANGED", [EVENT_GLOBAL_MOUSE_DOWN] = "EVENT_GLOBAL_MOUSE_DOWN", [EVENT_GLOBAL_MOUSE_UP] = "EVENT_GLOBAL_MOUSE_UP", [EVENT_GUI_HIDDEN] = "EVENT_GUI_HIDDEN", [EVENT_INPUT_LANGUAGE_CHANGED] = "EVENT_INPUT_LANGUAGE_CHANGED", [EVENT_KEYBINDINGS_LOADED] = "EVENT_KEYBINDINGS_LOADED", [EVENT_KEYBINDING_CLEARED] = "EVENT_KEYBINDING_CLEARED", [EVENT_KEYBINDING_SET] = "EVENT_KEYBINDING_SET", [EVENT_LUA_ERROR] = "EVENT_LUA_ERROR", [EVENT_SCREEN_RESIZED] = "EVENT_SCREEN_RESIZED", [EVENT_SCRIPT_ACCESS_VIOLATION] = "EVENT_SCRIPT_ACCESS_VIOLATION", [EVENT_SECURE_3D_RENDER_MODE_CHANGED] = "EVENT_SECURE_3D_RENDER_MODE_CHANGED", [EVENT_SECURE_RENDER_MODE_CHANGED] = "EVENT_SECURE_RENDER_MODE_CHANGED", [EVENT_SHOW_PREGAME_GUI_IN_STATE] = "EVENT_SHOW_PREGAME_GUI_IN_STATE", [EVENT_UPDATE_GUI_LOADING_PROGRESS] = "EVENT_UPDATE_GUI_LOADING_PROGRESS",}
local sep = "`"
local txtSepNameSep = sep .. playerName .. sep
local function Dump(o)
   local typ_obj = type(o)
   if typ_obj == "string" then return o
   elseif typ_obj == "number" then return tostring(o)
   elseif typ_obj == "table" then
      local s = "{"
      for k,v in pairs(o) do
         if type(k) ~= "number" then k = "'"..tostring(k).."'" end
         s = s .. "["..k.."]=" .. Dump(v) .. ","
      end
      return s .. "}"
   elseif typ_obj == 'userdata' then
      local s = "{"
      for k,v in pairs(getmetatable(o).__index) do
         if type(k) ~= "number" then k = "'"..tostring(k).."'" end
         s = s .. "["..k.."]=" .. Dump(v) .. ","
      end
      return s .. "}"
   else return tostring(o) end
end
AnyAltLogger.Dump = Dump
local function HollowCopy(o, listFunc, lvl)
   local depth = (lvl or 8) - 1
   if depth <= 0 then return tostring(o) end -- depth exceeded
   if type(o) == 'function' then
      return "function"
   elseif type(o) == 'table' then
      local r = {}
      if listFunc==nil or listFunc==true then
         for k,v in pairs(o) do
            r[k] = HollowCopy(v, listFunc, depth)
         end
      else
         for k,v in pairs(o) do
            if type(v) ~= 'function' then r[k] = HollowCopy(v, listFunc, depth) end
         end
      end
      return r
   elseif type(o) == 'userdata' then
      local r = {}
      if listFunc==nil or listFunc==true then
         for k,v in pairs(getmetatable(o).__index) do
            r[k] = HollowCopy(v, listFunc, depth)
         end
      else
         for k,v in pairs(getmetatable(o).__index) do
            if type(v) ~= 'function' then r[k] = HollowCopy(v, listFunc, depth) end
         end
      end
      return r
   else
      return tostring(o)
   end
end
AnyAltLogger.HollowCopy = HollowCopy
local function Ternary(cond, ifTrue, ifFalse) if cond==true then return ifTrue elseif cond==false then return ifFalse else return cond end end
AnyAltLogger.Ternary = Ternary
local function LogBase(title, ...)
   local strArgs = (msBaseTime+GetGameTimeMilliseconds()) .. txtSepNameSep .. title
   for i = 1,select("#", ...) do -- pairs and ipairs are giving trouble with nils
      strArgs = strArgs .. sep .. Dump(select(i, ...))
      --strArgs = strArgs .. sep .. Dump(HollowCopy(select(i, ...), true, 2))
   end
   if string.len(strArgs) >= 2000 then
      for i=1, string.len(strArgs), 1999 do
         table.insert(AnyAltLoggerSavedVariablesV2, string.sub(strArgs, i, i-1+1999))
      end
   else table.insert(AnyAltLoggerSavedVariablesV2, strArgs) end
end
local function LogHollow(title, ...)
   local strArgs = (msBaseTime+GetGameTimeMilliseconds()) .. txtSepNameSep .. title
   for i = 1,select("#", ...) do -- pairs and ipairs are giving trouble with nils
      strArgs = strArgs .. sep .. Dump(HollowCopy(select(i, ...), true, 2))
   end
   if string.len(strArgs) >= 2000 then
      for i=1, string.len(strArgs), 1999 do
         table.insert(AnyAltLoggerSavedVariablesV2, string.sub(strArgs, i, i-1+1999))
      end
   else table.insert(AnyAltLoggerSavedVariablesV2, strArgs) end
end
local function LogAnyArr(title, args)
   local strArgs = ""
   for i,v in pairs(args) do
      strArgs = strArgs .. sep .. tostring(v)
   end
   LogBase(title, strArgs)
end
local function LogAnyTxt(title, ...) LogBase(title, ...)end
function AnyAltLogger:LogAnyTxt(title, ...) LogBase(title, ...) end
function AnyAltLogger:Log(title, ...) LogBase(title, ...) end
local function GetSlotCooldownCSV()
   local bar, isLocked = GetActiveWeaponPairInfo()
   local str = "Bar"..tostring(bar)..sep..Ternary(isLocked, "Locked", "Unlocked")
   for i=1,16 do
      local remain, duration = GetSlotCooldownInfo(i) -- Returns: number remain, number duration, boolean global, number ActionBarSlotType globalSlotType
      str = str..sep..tostring(remain).."/"..tostring(duration)
   end
   return str
end
--local function LogAnyEvent(eventid, ...)
--   local eventname = EventsForLogging[eventid]
--   if eventid == EVENT_ACTION_UPDATE_COOLDOWNS then
--      LogBase(eventname, ..., GetSlotCooldownCSV())
--   elseif eventid == EVENT_ACTION_SLOT_ABILITY_USED then
--      LogBase(eventname, ..., GetSlotCooldownCSV())
--   elseif eventid == EVENT_LOOT_RECEIVED then
--      local args = {...}
--      LogBase(eventname, ..., GetItemLinkName(args[2]))
--   else
--      LogBase(eventname, ...)
--   end
--end
--local function LogAnyEvent(eventid, ...)
--   LogBase(EventsForLogging[eventid], ...)
--end
local function LogAnyEvent(eventid, ...)
   local eventname = EventsForLogging[eventid] or "eventid:"..tostring(eventid)
   --eventname = "Events:"..GetString("SI_"..string.upper("Events"),eventid) --Doesn't work
   if eventid == EVENT_SYNERGY_ABILITY_CHANGED then
      LogBase(eventname, ..., GetSynergyInfo())
   elseif eventid == EVENT_LOOT_RECEIVED then
      local args = {...}
      LogBase(eventname, ..., GetItemLinkName(args[2]))
   else
      LogBase(eventname, ...)
   end
end
---

local GetGameCameraInteractableActionInfo = GetGameCameraInteractableActionInfo
local CanInteractWithItem = CanInteractWithItem -- currently called wrong but still works * CanInteractWithItem(*[Bag|#Bag]* _bagId_, *integer* _slotIndex_) ** _Returns:_ *bool* _canInteract_
local IsInteracting = IsInteracting
local prvAction, prvInteractableName, prvInteractBlocked, prvIsOwned, prvAdditionalInfo, prvContextualInfo, prvContextualLink, prvIsCriminalInteract, prvCanInteractWithItem, prvIsInteracting
local curAction, curInteractableName, curInteractBlocked, curIsOwned, curAdditionalInfo, curContextualInfo, curContextualLink, curIsCriminalInteract, curCanInteractWithItem, curIsInteracting
function AnyAltLogger.OnReticleChange(curAction, curInteractableName, curInteractBlocked, curIsOwned, curAdditionalInfo, curContextualInfo, curContextualLink, curIsCriminalInteract, curCanInteractWithItem, curIsInteracting)
   prvAction, prvInteractableName, prvInteractBlocked, prvIsOwned, prvAdditionalInfo, prvContextualInfo, prvContextualLink, prvIsCriminalInteract, prvCanInteractWithItem, prvIsInteracting = curAction, curInteractableName, curInteractBlocked, curIsOwned, curAdditionalInfo, curContextualInfo, curContextualLink, curIsCriminalInteract, curCanInteractWithItem, curIsInteracting
   LogAnyTxt("OnReticleChange", curAction, curInteractableName, Ternary(curInteractBlocked, "Blocked", "NotBlocked"), Ternary(curIsOwned, "Owned", "NotOwned"), curAdditionalInfo, curContextualInfo, curContextualLink, Ternary(curIsCriminalInteract, "Crime", "Legal"), Ternary(curCanInteractWithItem, "CanInteract", "CanNotInteract"), Ternary(curIsInteracting, "IsInteracting", "IsNotInteracting"))
end
local function OnReticleSet()
	curAction, curInteractableName, curInteractBlocked, curIsOwned, curAdditionalInfo, curContextualInfo, curContextualLink, curIsCriminalInteract = GetGameCameraInteractableActionInfo()
   curCanInteractWithItem = CanInteractWithItem()
   curIsInteracting = IsInteracting()
	if curAction~=prvAction or curInteractableName~=prvInteractableName or curInteractBlocked~=prvInteractBlocked or curIsOwned~=prvIsOwned or curAdditionalInfo~=prvAdditionalInfo or curContextualInfo~=prvContextualInfo or curContextualLink~=prvContextualLink or curIsCriminalInteract~=prvIsCriminalInteract or curCanInteractWithItem~=prvCanInteractWithItem or curIsInteracting~=prvIsInteracting then
      AnyAltLogger.OnReticleChange(curAction, curInteractableName, curInteractBlocked, curIsOwned, curAdditionalInfo, curContextualInfo, curContextualLink, curIsCriminalInteract, curCanInteractWithItem, curIsInteracting)
	end
end


------------------

-- * GetChatterGreeting()
-- ** _Returns:_ *string* _optionString_

-- * GetChatterData()
-- ** _Returns:_ *string* _text_, *integer* _numOptions_, *bool* _atGreeting_

function AnyAltLogger:OnCombatInit() -- SLIM_BUILD
   LogBase('LED_COMBAT_INIT_LOCATION', GetCurrentZoneDungeonDifficulty(), GetUnitWorldPosition("player")) -- NORMAL/VET,X,Y,Z,HEADING
   LogBase('LED_COMBAT_INIT_ATTR_STATS') -- ATTRIBUTE POINTS, M/H/S MAX VALUES, MUNDUS, FOOD
   LogBase('LED_COMBAT_INIT_CP') -- List of active _championSkillId_
      -- Can probably cycle the Discipline and ChampionSkills to find those that are active or providing a benefit. otherwise you'll have to check the Bar for slotted skills
      -- * GetNumChampionDisciplines() ** _Returns:_ *integer* _numDisciplines_
      -- * GetNumChampionDisciplineSkills(*luaindex* _disciplineIndex_) ** _Returns:_ *integer* _numSkills_
      -- * GetChampionSkillId(*luaindex* _disciplineIndex_, *luaindex* _championSkillIndex_) ** _Returns:_ *integer* _championSkillId_
      -- HOTBAR_CATEGORY_CHAMPION
      -- CHAMPION_SKILL_TYPE_NORMAL_SLOTTABLE
      --* GetNumPointsSpentOnChampionSkill(*integer* _championSkillId_) ** _Returns:_ *integer* _numSpentPoints_
      --* GetChampionSkillMaxPoints(*integer* _championSkillId_) ** _Returns:_ *integer* _maxPoints_

   LogBase('LED_COMBAT_INIT_GEAR_001',
      GetItemLink(BAG_WORN, EQUIP_SLOT_BACKUP_MAIN),
      GetItemLink(BAG_WORN, EQUIP_SLOT_BACKUP_OFF),
      GetItemLink(BAG_WORN, EQUIP_SLOT_BACKUP_POISON),
      GetItemLink(BAG_WORN, EQUIP_SLOT_CHEST),
      GetItemLink(BAG_WORN, EQUIP_SLOT_CLASS1),
      GetItemLink(BAG_WORN, EQUIP_SLOT_CLASS2),
      GetItemLink(BAG_WORN, EQUIP_SLOT_CLASS3),
      GetItemLink(BAG_WORN, EQUIP_SLOT_COSTUME),
      GetItemLink(BAG_WORN, EQUIP_SLOT_FEET),
      GetItemLink(BAG_WORN, EQUIP_SLOT_HAND),
      GetItemLink(BAG_WORN, EQUIP_SLOT_HEAD),
      GetItemLink(BAG_WORN, EQUIP_SLOT_LEGS),
      GetItemLink(BAG_WORN, EQUIP_SLOT_MAIN_HAND),
      GetItemLink(BAG_WORN, EQUIP_SLOT_NECK),
      GetItemLink(BAG_WORN, EQUIP_SLOT_NONE),
      GetItemLink(BAG_WORN, EQUIP_SLOT_OFF_HAND),
      GetItemLink(BAG_WORN, EQUIP_SLOT_POISON),
      GetItemLink(BAG_WORN, EQUIP_SLOT_RANGED),
      GetItemLink(BAG_WORN, EQUIP_SLOT_RING1),
      GetItemLink(BAG_WORN, EQUIP_SLOT_RING2),
      GetItemLink(BAG_WORN, EQUIP_SLOT_SHOULDERS),
      GetItemLink(BAG_WORN, EQUIP_SLOT_WAIST),
      GetItemLink(BAG_WORN, EQUIP_SLOT_WRIST))
   LogBase('LED_COMBAT_INIT_GEAR_NAMES_001',
      GetItemName(BAG_WORN, EQUIP_SLOT_BACKUP_MAIN),
      GetItemName(BAG_WORN, EQUIP_SLOT_BACKUP_OFF),
      GetItemName(BAG_WORN, EQUIP_SLOT_BACKUP_POISON),
      GetItemName(BAG_WORN, EQUIP_SLOT_CHEST),
      GetItemName(BAG_WORN, EQUIP_SLOT_CLASS1),
      GetItemName(BAG_WORN, EQUIP_SLOT_CLASS2),
      GetItemName(BAG_WORN, EQUIP_SLOT_CLASS3),
      GetItemName(BAG_WORN, EQUIP_SLOT_COSTUME),
      GetItemName(BAG_WORN, EQUIP_SLOT_FEET),
      GetItemName(BAG_WORN, EQUIP_SLOT_HAND),
      GetItemName(BAG_WORN, EQUIP_SLOT_HEAD),
      GetItemName(BAG_WORN, EQUIP_SLOT_LEGS),
      GetItemName(BAG_WORN, EQUIP_SLOT_MAIN_HAND),
      GetItemName(BAG_WORN, EQUIP_SLOT_NECK),
      GetItemName(BAG_WORN, EQUIP_SLOT_NONE),
      GetItemName(BAG_WORN, EQUIP_SLOT_OFF_HAND),
      GetItemName(BAG_WORN, EQUIP_SLOT_POISON),
      GetItemName(BAG_WORN, EQUIP_SLOT_RANGED),
      GetItemName(BAG_WORN, EQUIP_SLOT_RING1),
      GetItemName(BAG_WORN, EQUIP_SLOT_RING2),
      GetItemName(BAG_WORN, EQUIP_SLOT_SHOULDERS),
      GetItemName(BAG_WORN, EQUIP_SLOT_WAIST),
      GetItemName(BAG_WORN, EQUIP_SLOT_WRIST))
   --* GetItemLink(*[Bag|#Bag]* _bagId_, *integer* _slotIndex_, *[LinkStyle|#LinkStyle]* _linkStyle_) ** _Returns:_ *string* _link_
   --* GetItemLinkSetInfo(*string* _itemLink_, *bool* _equipped_) ** _Returns:_ *bool* _hasSet_, *string* _setName_, *integer* _numBonuses_, *integer* _numNormalEquipped_, *integer* _maxEquipped_, *integer* _setId_, *integer* _numPerfectedEquipped_

   --local UnitAttributeVisual = { [ATTRIBUTE_VISUAL_AUTOMATIC] = "ATTRIBUTE_VISUAL_AUTOMATIC", [ATTRIBUTE_VISUAL_DECREASED_MAX_POWER] = "ATTRIBUTE_VISUAL_DECREASED_MAX_POWER", [ATTRIBUTE_VISUAL_DECREASED_REGEN_POWER] = "ATTRIBUTE_VISUAL_DECREASED_REGEN_POWER", [ATTRIBUTE_VISUAL_DECREASED_STAT] = "ATTRIBUTE_VISUAL_DECREASED_STAT", [ATTRIBUTE_VISUAL_INCREASED_MAX_POWER] = "ATTRIBUTE_VISUAL_INCREASED_MAX_POWER", [ATTRIBUTE_VISUAL_INCREASED_REGEN_POWER] = "ATTRIBUTE_VISUAL_INCREASED_REGEN_POWER", [ATTRIBUTE_VISUAL_INCREASED_STAT] = "ATTRIBUTE_VISUAL_INCREASED_STAT", [ATTRIBUTE_VISUAL_NONE] = "ATTRIBUTE_VISUAL_NONE", [ATTRIBUTE_VISUAL_POSSESSION] = "ATTRIBUTE_VISUAL_POSSESSION", [ATTRIBUTE_VISUAL_POWER_SHIELDING] = "ATTRIBUTE_VISUAL_POWER_SHIELDING", [ATTRIBUTE_VISUAL_TRAUMA] = "ATTRIBUTE_VISUAL_TRAUMA", [ATTRIBUTE_VISUAL_UNWAVERING_POWER] = "ATTRIBUTE_VISUAL_UNWAVERING_POWER",}
   --local DerivedStats = { [STAT_ARMOR_RATING] = "STAT_ARMOR_RATING", [STAT_ATTACK_POWER] = "STAT_ATTACK_POWER", [STAT_BLOCK] = "STAT_BLOCK", [STAT_CRITICAL_CHANCE] = "STAT_CRITICAL_CHANCE", [STAT_CRITICAL_RESISTANCE] = "STAT_CRITICAL_RESISTANCE", [STAT_CRITICAL_STRIKE] = "STAT_CRITICAL_STRIKE", [STAT_DAMAGE_RESIST_BLEED] = "STAT_DAMAGE_RESIST_BLEED", [STAT_DAMAGE_RESIST_COLD] = "STAT_DAMAGE_RESIST_COLD", [STAT_DAMAGE_RESIST_DISEASE] = "STAT_DAMAGE_RESIST_DISEASE", [STAT_DAMAGE_RESIST_DROWN] = "STAT_DAMAGE_RESIST_DROWN", [STAT_DAMAGE_RESIST_EARTH] = "STAT_DAMAGE_RESIST_EARTH", [STAT_DAMAGE_RESIST_FIRE] = "STAT_DAMAGE_RESIST_FIRE", [STAT_DAMAGE_RESIST_GENERIC] = "STAT_DAMAGE_RESIST_GENERIC", [STAT_DAMAGE_RESIST_MAGIC] = "STAT_DAMAGE_RESIST_MAGIC", [STAT_DAMAGE_RESIST_OBLIVION] = "STAT_DAMAGE_RESIST_OBLIVION", [STAT_DAMAGE_RESIST_PHYSICAL] = "STAT_DAMAGE_RESIST_PHYSICAL", [STAT_DAMAGE_RESIST_POISON] = "STAT_DAMAGE_RESIST_POISON", [STAT_DAMAGE_RESIST_SHOCK] = "STAT_DAMAGE_RESIST_SHOCK", [STAT_DAMAGE_RESIST_START] = "STAT_DAMAGE_RESIST_START", [STAT_DODGE] = "STAT_DODGE", [STAT_HEALING_DONE] = "STAT_HEALING_DONE", [STAT_HEALING_TAKEN] = "STAT_HEALING_TAKEN", [STAT_HEALTH_MAX] = "STAT_HEALTH_MAX", [STAT_HEALTH_REGEN_COMBAT] = "STAT_HEALTH_REGEN_COMBAT", [STAT_HEALTH_REGEN_IDLE] = "STAT_HEALTH_REGEN_IDLE", [STAT_MAGICKA_MAX] = "STAT_MAGICKA_MAX", [STAT_MAGICKA_REGEN_COMBAT] = "STAT_MAGICKA_REGEN_COMBAT", [STAT_MAGICKA_REGEN_IDLE] = "STAT_MAGICKA_REGEN_IDLE", [STAT_MISS] = "STAT_MISS", [STAT_MITIGATION] = "STAT_MITIGATION", [STAT_MOUNT_STAMINA_MAX] = "STAT_MOUNT_STAMINA_MAX", [STAT_MOUNT_STAMINA_REGEN_COMBAT] = "STAT_MOUNT_STAMINA_REGEN_COMBAT", [STAT_MOUNT_STAMINA_REGEN_MOVING] = "STAT_MOUNT_STAMINA_REGEN_MOVING", [STAT_NONE] = "STAT_NONE", [STAT_OFFENSIVE_PENETRATION] = "STAT_OFFENSIVE_PENETRATION", [STAT_PHYSICAL_PENETRATION] = "STAT_PHYSICAL_PENETRATION", [STAT_PHYSICAL_RESIST] = "STAT_PHYSICAL_RESIST", [STAT_POWER] = "STAT_POWER", [STAT_SPELL_CRITICAL] = "STAT_SPELL_CRITICAL", [STAT_SPELL_MITIGATION] = "STAT_SPELL_MITIGATION", [STAT_SPELL_PENETRATION] = "STAT_SPELL_PENETRATION", [STAT_SPELL_POWER] = "STAT_SPELL_POWER", [STAT_SPELL_RESIST] = "STAT_SPELL_RESIST", [STAT_STAMINA_MAX] = "STAT_STAMINA_MAX", [STAT_STAMINA_REGEN_COMBAT] = "STAT_STAMINA_REGEN_COMBAT", [STAT_STAMINA_REGEN_IDLE] = "STAT_STAMINA_REGEN_IDLE", [STAT_WEAPON_AND_SPELL_DAMAGE] = "STAT_WEAPON_AND_SPELL_DAMAGE",}
   --local Attributes = { [ATTRIBUTE_HEALTH] = "ATTRIBUTE_HEALTH", [ATTRIBUTE_MAGICKA] = "ATTRIBUTE_MAGICKA", [ATTRIBUTE_NONE] = "ATTRIBUTE_NONE", [ATTRIBUTE_STAMINA] = "ATTRIBUTE_STAMINA",}
   --local CombatMechanicType = { [POWERTYPE_DAEDRIC] = "POWERTYPE_DAEDRIC", [POWERTYPE_HEALTH] = "POWERTYPE_HEALTH", [POWERTYPE_HEALTH_BONUS] = "POWERTYPE_HEALTH_BONUS", [POWERTYPE_INVALID] = "POWERTYPE_INVALID", [POWERTYPE_MAGICKA] = "POWERTYPE_MAGICKA", [POWERTYPE_MOUNT_STAMINA] = "POWERTYPE_MOUNT_STAMINA", [POWERTYPE_STAMINA] = "POWERTYPE_STAMINA", [POWERTYPE_ULTIMATE] = "POWERTYPE_ULTIMATE", [POWERTYPE_WEREWOLF] = "POWERTYPE_WEREWOLF",}
   --LogBase('LED_COMBAT_INIT_EFFECT_001', GetAllUnitAttributeVisualizerEffectInfo("player"))
   -- * GetAllUnitAttributeVisualizerEffectInfo(*string* _unitTag_)
   -- ** _Uses variable returns..._
   -- ** _Returns:_
   --      *[UnitAttributeVisual|#UnitAttributeVisual]* _unitAttributeVisual_,
   --      *[DerivedStats|#DerivedStats]* _statType_,
   --      *[Attributes|#Attributes]* _attributeType_,
   --      *[CombatMechanicType|#CombatMechanicType]* _powerType_,
   --      *number* _value_,
   --      *number* _maxValue_
   local tblAttributeVisual = {GetAllUnitAttributeVisualizerEffectInfo("player")}
   for i=1,NUM_POWER_POOLS do
      local offset = (i-1)*6
      LogBase('LED_COMBAT_INIT_EFFECT_'..i,
         " unitAttributeVisual:" .. GetString("SI_"..string.upper("UnitAttributeVisual"),tblAttributeVisual[offset+1]),
         " statType:" .. GetString("SI_"..string.upper("DerivedStats"),tblAttributeVisual[offset+2]),
         " attributeType:" .. GetString("SI_"..string.upper("Attributes"),tblAttributeVisual[offset+3]),
         " powerType:" .. GetString("SI_"..string.upper("CombatMechanicType"),tblAttributeVisual[offset+4]),
         " current:" .. tostring(tblAttributeVisual[offset+5]),
         " max:" .. tostring(tblAttributeVisual[offset+6])
         )
   end




   --local strPools = ""
   for i=1,NUM_POWER_POOLS do
      --local cur, x, effMax = GetUnitPowerInfo("player", i) -- * GetUnitPowerInfo(*string* _unitTag_, *luaindex* _poolIndex_) ** _Returns:_ *integer:nilable* _type_, *integer* _current_, *integer* _max_, *integer* _effectiveMax_
      local pwrType, cur, mx, effMax = GetUnitPowerInfo("player", i) -- * GetUnitPowerInfo(*string* _unitTag_, *luaindex* _poolIndex_) ** _Returns:_ *integer:nilable* _type_, *integer* _current_, *integer* _max_, *integer* _effectiveMax_
      --strPools = strPools.."POOL_"..tostring(i)..":"..tostring(cur)..'|'..tostring(mx)..'|'..tostring(effMax)
      local strCombatMechanicType = GetString("SI_COMBATMECHANICTYPE",pwrType) -- CombatMechanicType
      LogBase('LED_COMBAT_INIT_POOLS_001', "POOL_"..tostring(i)..":"..tostring(strCombatMechanicType)..":"..tostring(cur)..'|'..tostring(mx)..'|'..tostring(effMax))
   end
   --LogBase('LED_COMBAT_INIT_POOLS_001', strPools)
end
EVENT_MANAGER:RegisterForEvent(AnyAltLogger.name, EVENT_PLAYER_COMBAT_STATE, AnyAltLogger.OnCombatInit)
EVENT_MANAGER:RegisterForEvent(AnyAltLogger.name, EVENT_PLAYER_ACTIVATED, AnyAltLogger.OnCombatInit)

local reticleTargets = {}
local reticleover = 'reticleover'
local function GetReticleEffMaxPower(typ)
   --local _, _, effMax = GetUnitPower(reticleover, typ) -- * GetUnitPower(*string* _unitTag_, *[CombatMechanicType|#CombatMechanicType]* _powerType_) ** _Returns:_ *integer* _current_, *integer* _max_, *integer* _effectiveMax_
   --return effMax
   local cur, mx, effMax = GetUnitPower(reticleover, typ) -- * GetUnitPower(*string* _unitTag_, *[CombatMechanicType|#CombatMechanicType]* _powerType_) ** _Returns:_ *integer* _current_, *integer* _max_, *integer* _effectiveMax_
   return tostring(cur)..'|'..tostring(mx)..'|'..tostring(effMax)
end
-- h5. ItemTraitType -- GetString("SI_ITEMTRAITTYPE",GetItemTrait(bagId,slotIndex)
function AnyAltLogger:OnEnemyEncountered()
   local unitTag = 'reticleover'
   if DoesUnitExist(unitTag) then
      local unitType = GetUnitType(unitTag)
      local difficulty = GetUnitDifficulty(unitTag)
      if difficulty > 0 then -- if unitType == 2 and difficulty > 0 then
         local zoneIndex = GetUnitZoneIndex(unitTag)
         local name = GetUnitName(unitTag)
         local targetKey = tostring(zoneIndex) .. tostring(name) .. tostring(difficulty)
         if reticleTargets[targetKey] then
            return
         else
            reticleTargets[targetKey] = true
            LogBase('LED_ENEMY_SEEN_001',
               zoneIndex,
               GetUnitZone(unitTag),
               name,
               'Type',unitType,
               'Difficulty',difficulty,
               'IsUnitActivelyEngaged',IsUnitActivelyEngaged(unitTag),
               'IsUnitAttackable',IsUnitAttackable(unitTag),
               'HEALTH',GetReticleEffMaxPower(POWERTYPE_HEALTH),
               'MAGICKA',GetReticleEffMaxPower(POWERTYPE_MAGICKA),
               'STAMINA',GetReticleEffMaxPower(POWERTYPE_STAMINA),
               'HEALTH_BONUS',GetReticleEffMaxPower(POWERTYPE_HEALTH_BONUS),
               'DAEDRIC',GetReticleEffMaxPower(POWERTYPE_DAEDRIC),
               'MOUNT_STAMINA',GetReticleEffMaxPower(POWERTYPE_MOUNT_STAMINA),
               'ULTIMATE',GetReticleEffMaxPower(POWERTYPE_ULTIMATE),
               'WEREWOLF',GetReticleEffMaxPower(POWERTYPE_WEREWOLF),
               'INVALID',GetReticleEffMaxPower(POWERTYPE_INVALID),
               'Gender',GetUnitGender(unitTag),
               'Class',GetUnitClass(unitTag),
               'EffectiveLevel',GetUnitEffectiveLevel(unitTag),
               'WorldPosition',GetUnitWorldPosition(unitTag),
               'RawWorldPosition',GetUnitRawWorldPosition(unitTag),
               'XP',GetUnitXP(unitTag),
               'Alliance',GetUnitAlliance(unitTag),
               'Race',GetUnitRace(unitTag),
               'Reaction',GetUnitReaction(unitTag),
               'RaceId',GetUnitRaceId(unitTag),
               '')
            --* GetGameCameraPickpocketingBonusInfo() ** _Returns:_ *bool* _inBonus_, *bool* _isHostile_, *integer* _percentChance_, *[PickpocketDifficultyType|#PickpocketDifficultyType]* _difficulty_, *bool* _isEmpty_, *[ProspectivePickpocketResult|#ProspectivePickpocketResult]* _prospectiveResult_, *string* _monsterSocialClassString_, *[MonsterSocialClass|#MonsterSocialClass]* _monsterSocialClass_
            LogBase('LED_ENEMY_SEEN_MONSTER_SOCIAL_001', GetGameCameraPickpocketingBonusInfo())

            --LogBase('LED_ENEMY_SEEN_EFFECT_001', GetAllUnitAttributeVisualizerEffectInfo(unitTag))
            ---- * GetAllUnitAttributeVisualizerEffectInfo(*string* _unitTag_)
            ---- ** _Uses variable returns..._
            ---- ** _Returns:_ *[UnitAttributeVisual|#UnitAttributeVisual]* _unitAttributeVisual_, *[DerivedStats|#DerivedStats]* _statType_, *[Attributes|#Attributes]* _attributeType_, *[CombatMechanicType|#CombatMechanicType]* _powerType_, *number* _value_, *number* _maxValue_

         end
      end
   end
end
EVENT_MANAGER:RegisterForEvent(AnyAltLogger.name, EVENT_RETICLE_TARGET_CHANGED, AnyAltLogger.OnEnemyEncountered)
------------------

local locWorldZoneId, locWorldX, locWorldY, locWorldZ
local locMapX, locMapY, locMapHeading
local function Footprints()
   local locPrvWorldZoneId, locPrvWorldX, locPrvWorldY, locPrvWorldZ = locWorldZoneId, locWorldX, locWorldY, locWorldZ
   local locPrvMapX, locPrvMapY, locPrvMapHeading = locMapX, locMapY, locMapHeading
   locWorldZoneId, locWorldX, locWorldY, locWorldZ = GetUnitRawWorldPosition("player") -- * GetUnitRawWorldPosition(*string* _unitTag_) ** _Returns:_ *integer* _zoneId_, *integer* _worldX_, *integer* _worldY_, *integer* _worldZ_
   locMapX, locMapY, locMapHeading = GetMapPlayerPosition("player") -- * GetMapPlayerPosition(*string* _unitTag_) ** _Returns:_ *number* _normalizedX_, *number* _normalizedZ_, *number* _heading_, *bool* _isShownInCurrentMap_
   if locPrvWorldZoneId ~= locWorldZoneId or locPrvWorldX ~= locWorldX or locPrvWorldY ~= locWorldY or locPrvWorldZ ~= locWorldZ or locPrvMapX ~= locMapX or locPrvMapY ~= locMapY then
      LogBase('PLAYER_WORLD_TRACKS', locWorldZoneId, locWorldX, locWorldY, locWorldZ, locMapX, locMapY, locMapHeading)
   end
end

------------------
local IsPrivateFunction = IsPrivateFunction
local function LogTest(fnc) -- TMPBRI
   local txtDesc = "check before hook:"..fnc
   txtDesc = txtDesc.." Private:"..Ternary(IsPrivateFunction(fnc),"True","False")
   txtDesc = txtDesc.." Protected:"..Ternary(IsProtectedFunction(fnc),"True","False")
   --txtDesc = txtDesc.." Trusted:"..Ternary(IsTrustedFunction(fnc),"True","False")
   --txtDesc = txtDesc..":"..tostring(self[fnc])
   LogBase(txtDesc)
   if IsPrivateFunction(fnc) then
      --SecurePostHook(fnc, function(...) LogBase("SecurePostHook:"..fnc, ...) end) -- Attempt to access a private function 'AttemptForceLock' from insecure code. The callstack became untrusted 5 stack frame(s) from the top.\nstack traceback:\n[C]: in function 'SecurePostHook'\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:346: in function 'LogTest'\n<Locals> fnc = \"AttemptForceLock\" </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:368: in function 'SetupBigHooks'\n<Locals> lstFnc = [table:1]{1 = \"AttachToConstellation\"}, _ = 13, v = \"AttemptForceLock\" </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:453: in function 'AnyAltLogger:Initialize'\n<Locals> self = [table:2]{name = \"AnyAltLogger\"}, SetupHooks = user:/AddOns/AnyAltLogger/AnyAltLogger.lua:396 </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:470: in function 'AnyAltLogger.OnAddOnLoaded'\n<Locals> event = 65536, addonName = \"AnyAltLogger\" </Locals>
   else
      --ZO_PreHook(fnc, function(...) LogBase("ZO_PreHook:"..fnc, ...) d("ZO_PreHook:"..fnc, ...) end) -- /EsoUI/Libraries/Utility/ZO_Hook.lua:15: Attempt to access a private function 'ClearSlot' from insecure code. The callstack became untrusted 5 stack frame(s) from the top.\nstack traceback:\n/EsoUI/Libraries/Utility/ZO_Hook.lua:15: in function 'ZO_PreHook'\n<Locals> objectTable = [table:1]{SI_INTERFACE_OPTIONS_CAMERA_ASSASSINATION_CAMERA = 8262, SKILL_GROWTH_TYPE_EXP = 0, SPECIALIZED_ITEMTYPE_FURNISHING_LIGHT = 211, SI_GUILDAPPLICATIONRESPONSE9 = 2269, GLOBAL_ERROR_CODE_PLATFORM_REALM_DIR_TIMEOUT = 100, MORPH_SLOT_MORPH_1 = 1, ANIMATION_COLOR = 8, DUSTMAN_BOT_DD_ACTIVE = 10558, ACHIEVEMENT_POINT_MIN_VALUE = 0, SI_GAMEPAD_WORLD_MAP_CHOOSE_ACTIVE_QUEST = 5747, GUILD_HISTORY_STORE_PURCHASES = 1, SI_CUSTOMERSERVICESUBMITFEEDBACKSUBCATEGORIES303 = 3117, STAT_POWER = 35, ZO_GAMEPAD_TRADING_HOUSE_LEVEL_RANGE_TYPE_CHAMPION_RANK = 3, SI_ZONE_STORY_UPGRADE_ACTION = 7433, REFLECTION_QUALITY_MIN_VALUE = 0, SI_COMBAT_METRICS_FAVOURITE_REMOVE = 12200, SKILL_GROWTH_TYPE_AP = 1, ZO_GAMEPAD_PANEL_FLOATING_CENTER_QUADRANT_1_SHOWN = 1175, SI_INTERFACE_OPTIONS_COMBAT_ENCOUNTER_LOG_APPEAR_ANONYMOUS_TOOLTIP = 5025, SI_GAMEPAD_QUEST_JOURNAL_QUEST_NAME_FORMAT = 6538, SI_FURNITURETHEMETYPE9 = 1236, SI_GAMEPAD_WORLD_MAP_SELECT_A_QUEST = 5748, MORPH_SLOT_BASE = 0, SI_GUILDAPPLICATIONRESPONSE10 = 2270, GLOBAL_ERROR_CODE_NO_ERROR = 0, NON_COMBAT_BONUS_ALCHEMY_POTION_DURATION = 14, ANIMATION_TEXTURESLIDE = 7, SPECIALIZED_ITEMTYPE_FURNISHING_ORNAMENTAL = 210, QUEST_CONDITION_TYPE_INTERACT_SIMPLE_OBJECT = 38, ACHIEVEMENT_POINT_MAX_VALUE = 50, LIBSETS_SETTYPE_MYTHIC = 12, SI_CONSOLEENHANCEDRENDERQUALITY4 = 4162, FTC_Menu_TRHeal = 13009, SI_MARKET_PRODUCT_TOOLTIP_UNLOCK_LEVEL = 391, SI_TIMED_ACTIVITIES_ACTIVITY_HEADER = 8986, SI_INTERFACE_OPTIONS_CAMERA_THIRD_PERSON_SIEGE_WEAPONRY_TOOLTIP = 8261, TEX_RES_CHOICE_SUPREME = -3, SI_ZONE_STORY_UNLOCK_ACTION = 7434, ZO_CURRENCY_SELECTOR_BUTTON_ANIMATION_DURATION_GAMEPAD = 25, SKILL_GROWTH_TYPE_SIEGE = 2, SI_FURNITURETHEMETYPE12 = 1239, SI_TIMED_ACTIVITIES_EMPTY_LIST = 8984, SI_GUILDAPPLICATIONRESPONSE7 = 2267, SI_TF_SETTING_REFRESHRATE = 10910, STAT_DAMAGE_RESIST_GENERIC = 37, SI_GAMEPAD_QUEST_JOURNAL_COMPANION = 6537, ANIMATION_TEXTUREROTATE = 6, SI_CUSTOMERSERVICESUBMITFEEDBACKSUBCATEGORIES301 = 3115, ACHIEVEMENT_POINT_HIGH = 15}, existingFunctionName = \"ClearSlot\", hookFunction = user:/AddOns/AnyAltLogger/AnyAltLogger.lua:348 </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:348: in function 'LogTest'\n<Locals> fnc = \"ClearSlot\" </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:368: in function 'SetupBigHooks'\n<Locals> lstFnc = [table:2]{1 = \"AttachToConstellation\"}, _ = 923, v = \"ClearSlot\" </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:453: in function 'AnyAltLogger:Initialize'\n<Locals> self = [table:3]{name = \"AnyAltLogger\"}, SetupHooks = user:/AddOns/AnyAltLogger/AnyAltLogger.lua:396 </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:470: in function 'AnyAltLogger.OnAddOnLoaded'\n<Locals> event = 65536, addonName = \"AnyAltLogger\" </Locals>
      --ZO_PreHookHandler(fnc, function(...) LogBase("ZO_PreHookHandler:"..fnc, ...) end) -- /EsoUI/Libraries/Utility/ZO_Hook.lua:49: function expected instead of nil\nstack traceback:\n/EsoUI/Libraries/Utility/ZO_Hook.lua:49: in function 'ZO_PreHookHandler'\n<Locals> control = \"AttachToConstellation\", handlerName = user:/AddOns/AnyAltLogger/AnyAltLogger.lua:349 </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:349: in function 'LogTest'\n<Locals> fnc = \"AttachToConstellation\" </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:368: in function 'SetupBigHooks'\n<Locals> lstFnc = [table:1]{1 = \"AttachToConstellation\"}, _ = 1, v = \"AttachToConstellation\" </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:453: in function 'AnyAltLogger:Initialize'\n<Locals> self = [table:2]{name = \"AnyAltLogger\"}, SetupHooks = user:/AddOns/AnyAltLogger/AnyAltLogger.lua:396 </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:470: in function 'AnyAltLogger.OnAddOnLoaded'\n<Locals> event = 65536, addonName = \"AnyAltLogger\" </Locals>
      --ZO_PreHookHandler(_G, fnc, function(...) LogBase("ZO_PreHookHandler:"..fnc, ...) end) -- /EsoUI/Libraries/Utility/ZO_Hook.lua:49: function expected instead of nil\nstack traceback:\n/EsoUI/Libraries/Utility/ZO_Hook.lua:49: in function 'ZO_PreHookHandler'\n<Locals> control = [table:1]{SI_FASTTRAVELKEEPRESULT3 = 3427, SI_ALCHEMY_REAGENT_TRAIT_FORMATTER = 5310, LBOOKS_COMPASS_EIDETIC = 11729, GUILD_BANK_NOT_A_MEMBER = 2, OBJECTIVE_DESIGNATION_C = 3, ARMORTYPE_MEDIUM = 2, SI_RECENT_BATTLE_DAGGERFALL_VS_EBONHEART_MEDIUM = 4485, TEXT_WRAP_MODE_TRUNCATE = 0, SKILL_TOOLTIP_TEXT_COLOR_MAX_VALUE = 1, SI_CHARACTERSLIDERNAME19 = 699, SI_CONFIRM_DESTROY_ITEM_PROMPT = 7733, MEGASERVER_EU = 2, SI_COMBAT_METRICS_MENU_LM_TOOLTIP = 12427, SI_ITEM_ACTION_STACK_ALL = 8561, SI_SPECIALIZEDITEMTYPE2250 = 1595, SI_RESPECRESULT21 = 2615, SI_STATS_EQUIPMENT_BONUS_TOOLTIP_EMPTY_SLOT = 6837, ITEM_STYLE_CHAPTER_STAVES = 12, SI_FASTTRAVELKEEPRESULT2 = 3426, TRADING_HOUSE_CATEGORY_HEADER_ITERATION_BEGIN = 0, OBJECTIVE_DESIGNATION_B = 2, SI_RECENT_BATTLE_DAGGERFALL_VS_EBONHEART_LARGE = 4486, SKILL_TOOLTIP_TEXT_COLOR_MIN_VALUE = 0, KEY_GAMEPAD_TOUCHPAD_HOLD = 184, SI_ALCHEMY_REAGENT_TRAIT_LEARNED_DIALOG_BODY = 5309, TEXT_ALIGN_ITERATION_END = 4, ARMORTYPE_HEAVY = 3, SI_STAT_GAMEPAD_RIDING_HEADER_CAPACITY = 6038, SI_DESTROY_ITEM_CONFIRMATION = 7734, SI_CHARACTERSLIDERNAME20 = 700, ZO_MULTI_LINE_EDIT_CONTAINER_GAMEPAD_PADDING_TOP = 8, SI_ITEM_ACTION_RESEARCH = 8560, SI_RESPECRESULT22 = 2616, GUILD_BANK_SUCCESS = 1, ADVANCED_STAT_DISPLAY_TYPE_FIRE_RESIST = 31, ITEM_STYLE_CHAPTER_DAGGERS = 11, GUILD_BANK_CANT_BE_STORED = 4, OBJECTIVE_DESIGNATION_MIN_VALUE = 0, SI_STATS_EQUIPMENT_BONUS_GENERAL_TOOLTIP = 6836, SI_RESPECRESULT18 = 2612, SKILL_TOOLTIP_TEXT_COLOR_BODY = 1, ADVANCED_STAT_DISPLAY_TYPE_DISEASE_RESIST = 33, TRADING_HOUSE_CATEGORY_HEADER_MIN_VALUE = 0, SI_CHARACTERSLIDERNAME21 = 701, SI_PERFORM_ACTION_CONFIRMATION = 7735, SI_RESPECRESULT19 = 2613, SI_ITEM_ACTION_REMOVE_ITEMS_FROM_CRAFT_BAG = 8563, CHATTER_END_TREASURE_MAP = 4749, MEGASERVER_NONE = 0, ITEM_STYLE_CHAPTER_AXES = 10}, handlerName = \"AttachToConstellation\", hookFunction = user:/AddOns/AnyAltLogger/AnyAltLogger.lua:350 </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:350: in function 'LogTest'\n<Locals> fnc = \"AttachToConstellation\" </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:369: in function 'SetupBigHooks'\n<Locals> lstFnc = [table:2]{1 = \"AttachToConstellation\"}, _ = 1, v = \"AttachToConstellation\" </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:454: in function 'AnyAltLogger:Initialize'\n<Locals> self = [table:3]{name = \"AnyAltLogger\"}, SetupHooks = user:/AddOns/AnyAltLogger/AnyAltLogger.lua:397 </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:471: in function 'AnyAltLogger.OnAddOnLoaded'\n<Locals> event = 65536, addonName = \"AnyAltLogger\" </Locals>
      --ZO_PreHookHandler(self, fnc, function(...) LogBase("ZO_PreHookHandler:"..fnc, ...) end) -- /EsoUI/Libraries/Utility/ZO_Hook.lua:49: attempt to index a nil value\nstack traceback:\n/EsoUI/Libraries/Utility/ZO_Hook.lua:49: in function 'ZO_PreHookHandler'\n<Locals> handlerName = \"AttachToConstellation\", hookFunction = user:/AddOns/AnyAltLogger/AnyAltLogger.lua:351 </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:351: in function 'LogTest'\n<Locals> fnc = \"AttachToConstellation\" </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:371: in function 'SetupBigHooks'\n<Locals> lstFnc = [table:1]{1 = \"AttachToConstellation\"}, _ = 1, v = \"AttachToConstellation\" </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:455: in function 'AnyAltLogger:Initialize'\n<Locals> self = [table:2]{name = \"AnyAltLogger\"}, SetupHooks = user:/AddOns/AnyAltLogger/AnyAltLogger.lua:398 </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:472: in function 'AnyAltLogger.OnAddOnLoaded'\n<Locals> event = 65536, addonName = \"AnyAltLogger\" </Locals>
      --ZO_PreHookHandler(nil, fnc, function(...) LogBase("ZO_PreHookHandler:"..fnc, ...) end) -- /EsoUI/Libraries/Utility/ZO_Hook.lua:49: attempt to index a nil value\nstack traceback:\n/EsoUI/Libraries/Utility/ZO_Hook.lua:49: in function 'ZO_PreHookHandler'\n<Locals> handlerName = \"AttachToConstellation\", hookFunction = user:/AddOns/AnyAltLogger/AnyAltLogger.lua:352 </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:352: in function 'LogTest'\n<Locals> fnc = \"AttachToConstellation\" </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:371: in function 'SetupBigHooks'\n<Locals> lstFnc = [table:1]{1 = \"AttachToConstellation\"}, _ = 1, v = \"AttachToConstellation\" </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:455: in function 'AnyAltLogger:Initialize'\n<Locals> self = [table:2]{name = \"AnyAltLogger\"}, SetupHooks = user:/AddOns/AnyAltLogger/AnyAltLogger.lua:398 </Locals>\nuser:/AddOns/AnyAltLogger/AnyAltLogger.lua:472: in function 'AnyAltLogger.OnAddOnLoaded'\n<Locals> event = 65536, addonName = \"AnyAltLogger\" </Locals>
   end
end
local function SetupBigHooks() -- TMPBRI

end
------------------
HookTest = {}
HookTest.name = "HookTest"
local simpleSet = true -- TMPBRI REMOVE
HookList = {}
local sniffedInteraction = {} -- TMPBRI REMOVE

local function SetupTestHooks()
   if true then
      --ZO_PreHook(FISHING_MANAGER, "StartInteraction", function(...) LogHollow('ZO_PreHook.FISHING_MANAGER.StartInteraction', GetUnitName("interact"), ...) end) -- TMPBRI
      --ZO_PreHook(FISHING_MANAGER, "StopInteraction", function(...) LogHollow('ZO_PreHook.FISHING_MANAGER.StopInteraction', GetUnitName("interact"), ...) end) -- TMPBRI
      --ZO_PreHook(FISHING_MANAGER, "PrepareForInteraction", function(...) LogHollow('ZO_PreHook.FISHING_MANAGER.PrepareForInteraction', GetUnitName("interact"), ...) end) -- TMPBRI

      LogHollow('ZO_Fishing', ZO_Fishing)
      LogHollow('FISHING_KEYBOARD', FISHING_KEYBOARD) --FISHING_KEYBOARD = ZO_Fishing:New(control, "ZO_SelectableItemRadialMenuEntryTemplate", "DefaultRadialMenuAnimation", "SelectableItemRadialMenuEntryAnimation")
      LogHollow('EVENT_MANAGER', EVENT_MANAGER)
      LogHollow('ACHIEVEMENTS_MANAGER', ACHIEVEMENTS_MANAGER)
      LogHollow('ALERT_EVENT_MANAGER', ALERT_EVENT_MANAGER)
      LogHollow('FISHING_MANAGER', FISHING_MANAGER)
      LogHollow('GROUP_LIST_MANAGER', GROUP_LIST_MANAGER)
      LogHollow('SCENE_MANAGER', SCENE_MANAGER)
      LogHollow('RETICLE', RETICLE)
      LogHollow('RETICLE.interact', RETICLE.interact)
      LogHollow('ZO_Reticle', ZO_Reticle)
      LogHollow('ZO_InteractionManager', ZO_InteractionManager)
      LogHollow('INTERACT_WINDOW', INTERACT_WINDOW) --INTERACT_WINDOW = ZO_InteractionManager:New()
      
      LogHollow('ZO_Interaction', ZO_Interaction)
      LogHollow('INTERACTION', INTERACTION) --INTERACTION = ZO_Interaction:New(control)

      LogHollow('ZO_InteractScene', ZO_InteractScene)
      LogHollow('ZO_InteractScene_Mixin', ZO_InteractScene_Mixin)
      LogHollow('LOCK_PICK_SCENE', LOCK_PICK_SCENE)


      LogHollow('ZO_EndInWorldInteractionsFragment', ZO_EndInWorldInteractionsFragment) -- INTERACTION_HARVEST = 28
      LogHollow('END_IN_WORLD_INTERACTIONS_FRAGMENT', END_IN_WORLD_INTERACTIONS_FRAGMENT) -- END_IN_WORLD_INTERACTIONS_FRAGMENT = ZO_EndInWorldInteractionsFragment:New()
      

      --ZO_PreHook(ZO_Reticle, "TryHandlingGroundTargetingError", function() LogHollow('ZO_PreHook.ZO_Reticle.TryHandlingGroundTargetingError') end)
      --ZO_PreHook(ZO_Reticle, "TryHandlingInteraction", function(_,interactionExists, currentFrameTimeSeconds) LogHollow('ZO_PreHook.ZO_Reticle.TryHandlingInteraction', interactionExists, currentFrameTimeSeconds) end)
      --ZO_PreHook(ZO_Reticle, "TryHandlingQuestInteraction", function(_,questInteraction, questTargetBased, questJournalIndex, questToolIndex, questToolOnCooldown) LogHollow('ZO_PreHook.ZO_Reticle.TryHandlingQuestInteraction', questInteraction, questTargetBased, questJournalIndex, questToolIndex, questToolOnCooldown) end)
      --ZO_PreHook(INTERACT_WINDOW, "OnBeginInteraction", function(_,interaction) LogHollow('ZO_PreHook.INTERACT_WINDOW.OnBeginInteraction', interaction) end)
      --[390] = "1645828381440`Phrost Pendragon`ZO_PreHook.INTERACT_WINDOW.OnBeginInteraction`{['OnInteractionCanceled']=function: 0000023A115F7BE0,['OnInteractSwitch']=function: 0000023A11EA4078,['registeredScenes']=table: 0000023A11EA4188,['interactTypes']=table: 0000023A11EA4030,['type']=Interact,}",
      --[393] = "1645828381454`Phrost Pendragon`ZO_PreHook.INTERACT_WINDOW.OnBeginInteraction`{['type']=Banking,['registeredScenes']=table: 0000023A11B5DA70,['interactTypes']=table: 0000023A0F0B4D90,['OnInteractionCanceled']=function: 0000023A0F0B4D38,}",

      ZO_PreHook(FISHING_KEYBOARD, "StartInteraction", function(_,...) LogHollow('ZO_PreHook.FISHING_KEYBOARD.StartInteraction', ...) end)
      ZO_PreHook(FISHING_KEYBOARD, "StopInteraction", function(_,...) LogHollow('ZO_PreHook.FISHING_KEYBOARD.StopInteraction', ...) end)
      ZO_PreHook(FISHING_KEYBOARD, "PrepareForInteraction", function(_,...) LogHollow('ZO_PreHook.FISHING_KEYBOARD.PrepareForInteraction', ...) end)
      ZO_PreHook(FISHING_KEYBOARD, "PopulateMenu", function(_,...) LogHollow('ZO_PreHook.FISHING_KEYBOARD.PopulateMenu', ...) end)
      ZO_PreHook(FISHING_KEYBOARD, "onClearCallback", function(_,...) LogHollow('ZO_PreHook.FISHING_KEYBOARD.onClearCallback', ...) end) -- TMPBRI
      ZO_PreHook(FISHING_KEYBOARD, "onSelectionChangedCallback", function(_,...) LogHollow('ZO_PreHook.FISHING_KEYBOARD.onSelectionChangedCallback', ...) end) -- TMPBRI

      ZO_PreHook(ZO_InteractionManager, "Initialize", function() LogHollow('ZO_PreHook.ZO_InteractionManager.Initialize') end)
      ZO_PreHook(INTERACT_WINDOW, "OnBeginInteraction", function(self,interaction)
            LogHollow('ZO_PreHook.INTERACT_WINDOW.OnBeginInteraction:self', self)
            LogHollow('ZO_PreHook.INTERACT_WINDOW.OnBeginInteraction:interaction', interaction)
            sniffedInteraction = interaction
            if not HookList[interaction] then
               ZO_PreHook(interaction, "OnInteractionCanceled", function(_,a,b,c) LogHollow('ZO_PreHook.interaction.OnInteractionCanceled', a,b,c) end)
               ZO_PreHook(interaction, "OnInteractSwitch", function(_,a,b,c) LogHollow('ZO_PreHook.interaction.OnInteractSwitch', a,b,c) end)
               HookList[interaction] = true
            end
         end)
      ZO_PreHook(ZO_InteractionManager, "OnBeginInteraction", function(self,interaction)
            LogHollow('ZO_PreHook.ZO_InteractionManager.OnBeginInteraction:self', self)
            LogHollow('ZO_PreHook.ZO_InteractionManager.OnBeginInteraction:interaction', interaction)
            sniffedInteraction = interaction
            if not HookList[interaction] then
               ZO_PreHook(interaction, "OnInteractionCanceled", function(_,a,b,c) LogHollow('ZO_PreHook.interaction.OnInteractionCanceled', a,b,c) end)
               ZO_PreHook(interaction, "OnInteractSwitch", function(_,a,b,c) LogHollow('ZO_PreHook.interaction.OnInteractSwitch', a,b,c) end)
               HookList[interaction] = true
            end
         end)
      

      ZO_PreHook(INTERACT_WINDOW, "OnBeginInteraction", function(self,...) LogHollow('ZO_PreHook.INTERACT_WINDOW.OnBeginInteraction', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACT_WINDOW, "SelectChatterOptionByIndex", function(self,...) LogHollow('ZO_PreHook.INTERACT_WINDOW.SelectChatterOptionByIndex', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACT_WINDOW, "OnEndInteraction", function(self,...) LogHollow('ZO_PreHook.INTERACT_WINDOW.OnEndInteraction', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACT_WINDOW, "IsInteracting", function(self,...) LogHollow('ZO_PreHook.INTERACT_WINDOW.IsInteracting', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACT_WINDOW, "EndInteraction", function(self,...) LogHollow('ZO_PreHook.INTERACT_WINDOW.EndInteraction', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACT_WINDOW, "SelectLastChatterOption", function(self,...) LogHollow('ZO_PreHook.INTERACT_WINDOW.SelectLastChatterOption', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACT_WINDOW, "New", function(self,...) LogHollow('ZO_PreHook.INTERACT_WINDOW.New', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACT_WINDOW, "ShowInteractWindow", function(self,...) LogHollow('ZO_PreHook.INTERACT_WINDOW.ShowInteractWindow', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACT_WINDOW, "OnInteractionEnded", function(self,...) LogHollow('ZO_PreHook.INTERACT_WINDOW.OnInteractionEnded', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACT_WINDOW, "IsShowingInteraction", function(self,...) LogHollow('ZO_PreHook.INTERACT_WINDOW.IsShowingInteraction', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACT_WINDOW, "TerminateClientInteraction", function(self,...) LogHollow('ZO_PreHook.INTERACT_WINDOW.TerminateClientInteraction', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACT_WINDOW, "Initialize", function(self,...) LogHollow('ZO_PreHook.INTERACT_WINDOW.Initialize', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACT_WINDOW, "HandleChatterOptionClicked", function(self,...) LogHollow('ZO_PreHook.INTERACT_WINDOW.HandleChatterOptionClicked', ...) sniffedInteraction = self end)
      
      ZO_PreHook(INTERACTION, "AnchorBottomBG", function(self,...) LogHollow('ZO_PreHook.INTERACTION.AnchorBottomBG', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACTION, "DimOtherImportantOptions", function(self,...) LogHollow('ZO_PreHook.INTERACTION.DimOtherImportantOptions', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACTION, "FinalizeChatterOptions", function(self,...) LogHollow('ZO_PreHook.INTERACTION.FinalizeChatterOptions', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACTION, "InitInteraction", function(self,...) LogHollow('ZO_PreHook.INTERACTION.InitInteraction', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACTION, "Initialize", function(self,...) LogHollow('ZO_PreHook.INTERACTION.Initialize', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACTION, "New", function(self,...) LogHollow('ZO_PreHook.INTERACTION.New', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACTION, "OnScreenResized", function(self,...) LogHollow('ZO_PreHook.INTERACTION.OnScreenResized', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACTION, "PopulateChatterOption", function(self,...) LogHollow('ZO_PreHook.INTERACTION.PopulateChatterOption', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACTION, "ResetInteraction", function(self,...) LogHollow('ZO_PreHook.INTERACTION.ResetInteraction', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACTION, "RestoreOtherImportantOptions", function(self,...) LogHollow('ZO_PreHook.INTERACTION.RestoreOtherImportantOptions', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACTION, "SelectChatterOptionByIndex", function(self,...) LogHollow('ZO_PreHook.INTERACTION.SelectChatterOptionByIndex', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACTION, "SelectLastChatterOption", function(self,...) LogHollow('ZO_PreHook.INTERACTION.SelectLastChatterOption', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACTION, "ShowQuestRewards", function(self,...) LogHollow('ZO_PreHook.INTERACTION.ShowQuestRewards', ...) sniffedInteraction = self end)
      ZO_PreHook(INTERACTION, "UpdateChatterOptions", function(self,...) LogHollow('ZO_PreHook.INTERACTION.UpdateChatterOptions', ...) sniffedInteraction = self end)

      ZO_PreHook("ZO_InteractWindow_Initialize", function(self,...) LogHollow('ZO_PreHook.ZO_InteractWindow_Initialize', ...) sniffedInteraction = self end)

      ZO_PreHook(END_IN_WORLD_INTERACTIONS_FRAGMENT, "EndInteraction", function(self,...) LogHollow('ZO_PreHook.END_IN_WORLD_INTERACTIONS_FRAGMENT.EndInteraction', ...) sniffedInteraction = self end)
      ZO_PreHook(END_IN_WORLD_INTERACTIONS_FRAGMENT, "EndPendingInteraction", function(self,...) LogHollow('ZO_PreHook.END_IN_WORLD_INTERACTIONS_FRAGMENT.EndPendingInteraction', ...) sniffedInteraction = self end)
      ZO_PreHook(END_IN_WORLD_INTERACTIONS_FRAGMENT, "Show", function(self,...) LogHollow('ZO_PreHook.END_IN_WORLD_INTERACTIONS_FRAGMENT.Show', ...) sniffedInteraction = self end)
      ZO_PreHook(END_IN_WORLD_INTERACTIONS_FRAGMENT, "Hide", function(self,...) LogHollow('ZO_PreHook.END_IN_WORLD_INTERACTIONS_FRAGMENT.Hide', ...) sniffedInteraction = self end)
      ZO_PreHook(END_IN_WORLD_INTERACTIONS_FRAGMENT, "New", function(self,...) LogHollow('ZO_PreHook.END_IN_WORLD_INTERACTIONS_FRAGMENT.New', ...) sniffedInteraction = self end)

      
      --ZO_PreHook("StartBlock", function(self,...) LogHollow('ZO_PreHook.StartBlock', ...) end) -- EVENT_LUA_ERROR`/EsoUI/Libraries/Utility/ZO_Hook.lua:15: Attempt to access a private function 'StartBlock' from insecure code. The callstack became untrusted 3 stack frame(s) from the top.
      --ZO_PreHook("StopBlock", function(self,...) LogHollow('ZO_PreHook.StopBlock', ...) end)

      --ZO_PreHook("GameCameraInteractStart", function(_,a,b,c) LogHollow('ZO_PreHook.GameCameraInteractStart', a,b,c) end) -- private not allowed
      --ZO_PreHook(INTERACT_WINDOW.currentInteraction, "OnInteractSwitch", function(_,a,b,c) LogHollow('ZO_PreHook.INTERACT_WINDOW.currentInteraction.OnInteractSwitch', a,b,c) end)
      --ZO_PreHook(ZO_InteractionManager.currentInteraction, "OnInteractSwitch", function(_,a,b,c) LogHollow('ZO_PreHook.ZO_InteractionManager.currentInteraction.OnInteractSwitch', a,b,c) end)

      --EVENT_MANAGER:RegisterForUpdate(AnyAltLogger.name..'Sniff', 100, function() LogHollow('sniffedInteraction', sniffedInteraction) end)
      --EVENT_MANAGER:RegisterForUpdate(AnyAltLogger.name..'Sniff.INTERACT_WINDOW', 100, function() LogHollow('Sniff.INTERACT_WINDOW', INTERACT_WINDOW) end)
      --EVENT_MANAGER:RegisterForUpdate(AnyAltLogger.name..'Sniff.INTERACTION', 100, function() LogHollow('Sniff.INTERACTION', INTERACTION) end)
      --Sniff.INTERACT_WINDOW`{['Initialize']=function: 0000027234B8EC20,['OnEndInteraction']=function: 0000027238EFB438,['SelectChatterOptionByIndex']=function: 000002714EE23DD0,['IsInteracting']=function: 000002723DB28DF8,['New']=function: 0000027238EFB520,['OnBeginInteraction']=function: 0000027238ED7E68,['ShowInteractWindow']=function: 0000027217869D78,['SelectLastChatterOption']=function: 0000027238EFB488,['EndInteraction']=function: 000002723DB28E90,['TerminateClientInteraction']=function: 0000027234B8EB88,['IsShowingInteraction']=function: 000002724E1F51B0,['OnInteractionEnded']=function: 0000027217869E18,}",

      --EVENT_MANAGER:RegisterForUpdate(AnyAltLogger.name..'Sniff.IsPlayerTryingToMove', 10, function() LogHollow('Sniff.IsPlayerTryingToMove', IsPlayerTryingToMove(), GetInteractionType(), IsInteractionPending()) end)
      
      --SCENE_MANAGER:Show("lockpickGamepad")
      --SCENE_MANAGER:IsShowing("hud")
   end
end

function AnyAltLogger:Initialize()
   --AnyAltLoggerSavedVariablesV2 = ZO_SavedVars:NewAccountWide("AnyAltLoggerSavedVariablesV2", 1, nil, {})
   AnyAltLoggerSavedVariablesV2 = {}
   --for k,v in pairs(EventsForLogging) do
   --   EVENT_MANAGER:RegisterForEvent(AnyAltLogger.name, k, LogAnyEvent)
   --end
   EVENT_MANAGER:RegisterForAllEvents(AnyAltLogger.name, LogAnyEvent)
   --SLASH_COMMANDS["/aagetstring"] = function(...) d(GetString("SI_COMBATMECHANICTYPE", 6)) end

   EVENT_MANAGER:RegisterForUpdate(AnyAltLogger.name, 10, OnReticleSet)
   LogBase('PLAYER_PRVMAP_TRACKS1', locPrvMapX, locPrvMapY, locPrvMapHeading, locMapX, locMapY, locMapHeading)
   EVENT_MANAGER:RegisterForUpdate(AnyAltLogger.name..'Footprints', 100, Footprints)

   --* EVENT_ACTION_LAYER_PUSHED (*luaindex* _layerIndex_, *luaindex* _activeLayerIndex_)
   EVENT_MANAGER:RegisterForEvent(AnyAltLogger.name.."Hooks", EVENT_ACTION_LAYER_PUSHED, function(eventCode, layerIndex, activeLayerIndex) if layerIndex==1 and activeLayerIndex==1 then SetupTestHooks() end end)
end

-- Then we create an event handler function which will be called when the "addon loaded" event
-- occurs. We'll use this to initialize our addon after all of its resources are fully loaded.
function AnyAltLogger.OnAddOnLoaded(event, addonName) -- The event fires each time *any* addon loads - but we only care about when our own addon loads.
   if addonName == AnyAltLogger.name then AnyAltLogger:Initialize() end
end

-- Finally, we'll register our event handler function to be called when the proper event occurs.
EVENT_MANAGER:RegisterForEvent(AnyAltLogger.name, EVENT_ADD_ON_LOADED, AnyAltLogger.OnAddOnLoaded)

